#pragma once 
#include "Register/Utility.hpp"
namespace Kvasir {
//LCD Controller
    namespace LcdcLcdcfg0{    ///<LCD Controller Configuration Register 0
        using Addr = Register::Address<0xf0030000,0xff00c0f2,0,unsigned>;
        ///LCD Controller Clock Polarity
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> clkpol{}; 
        namespace ClkpolValC{
        }
        ///LCD Controller Clock Source Selection
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> clksel{}; 
        namespace ClkselValC{
        }
        ///LCD Controller PWM Clock Source Selection
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> clkpwmsel{}; 
        namespace ClkpwmselValC{
        }
        ///Clock Gating Disable Control for the Base Layer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> cgdisbase{}; 
        namespace CgdisbaseValC{
        }
        ///Clock Gating Disable Control for the Overlay 1 Layer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> cgdisovr1{}; 
        namespace Cgdisovr1ValC{
        }
        ///Clock Gating Disable Control for the Overlay 2 Layer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> cgdisovr2{}; 
        namespace Cgdisovr2ValC{
        }
        ///Clock Gating Disable Control for the High End Overlay
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> cgdisheo{}; 
        namespace CgdisheoValC{
        }
        ///Clock Gating Disable Control for the Hardware Cursor Layer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> cgdishcr{}; 
        namespace CgdishcrValC{
        }
        ///Clock Gating Disable Control for the Post Processing Layer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> cgdispp{}; 
        namespace CgdisppValC{
        }
        ///LCD Controller Clock Divider
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> clkdiv{}; 
        namespace ClkdivValC{
        }
    }
    namespace LcdcLcdcfg1{    ///<LCD Controller Configuration Register 1
        using Addr = Register::Address<0xf0030004,0xffc0ffc0,0,unsigned>;
        ///Horizontal Synchronization Pulse Width
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,0),Register::ReadWriteAccess,unsigned> hspw{}; 
        namespace HspwValC{
        }
        ///Vertical Synchronization Pulse Width
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(21,16),Register::ReadWriteAccess,unsigned> vspw{}; 
        namespace VspwValC{
        }
    }
    namespace LcdcLcdcfg2{    ///<LCD Controller Configuration Register 2
        using Addr = Register::Address<0xf0030008,0xffc0ffc0,0,unsigned>;
        ///Vertical Front Porch Width
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,0),Register::ReadWriteAccess,unsigned> vfpw{}; 
        namespace VfpwValC{
        }
        ///Vertical Back Porch Width
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(21,16),Register::ReadWriteAccess,unsigned> vbpw{}; 
        namespace VbpwValC{
        }
    }
    namespace LcdcLcdcfg3{    ///<LCD Controller Configuration Register 3
        using Addr = Register::Address<0xf003000c,0xfe00fe00,0,unsigned>;
        ///Horizontal Front Porch Width
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,0),Register::ReadWriteAccess,unsigned> hfpw{}; 
        namespace HfpwValC{
        }
        ///Horizontal Back Porch Width
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(24,16),Register::ReadWriteAccess,unsigned> hbpw{}; 
        namespace HbpwValC{
        }
    }
    namespace LcdcLcdcfg4{    ///<LCD Controller Configuration Register 4
        using Addr = Register::Address<0xf0030010,0xf800f800,0,unsigned>;
        ///Number of Pixels Per Line
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> ppl{}; 
        namespace PplValC{
        }
        ///Number of Active Row Per Frame
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> rpf{}; 
        namespace RpfValC{
        }
    }
    namespace LcdcLcdcfg5{    ///<LCD Controller Configuration Register 5
        using Addr = Register::Address<0xf0030014,0xffe0c820,0,unsigned>;
        ///Horizontal Synchronization Pulse Polarity
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> hspol{}; 
        namespace HspolValC{
        }
        ///Vertical Synchronization Pulse Polarity
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> vspol{}; 
        namespace VspolValC{
        }
        ///Vertical Synchronization Pulse Start
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> vspdlys{}; 
        namespace VspdlysValC{
        }
        ///Vertical Synchronization Pulse End
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> vspdlye{}; 
        namespace VspdlyeValC{
        }
        ///Display Signal Polarity
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> disppol{}; 
        namespace DisppolValC{
        }
        ///LCD Controller Dithering
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> dither{}; 
        namespace DitherValC{
        }
        ///LCD Controller Display Power Signal Synchronization
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,7),Register::ReadWriteAccess,unsigned> dispdly{}; 
        namespace DispdlyValC{
        }
        ///LCD Controller Output Mode
        enum class ModeVal {
            output12bpp=0x00000000,     ///<LCD output mode is set to 12 bits per pixel
            output16bpp=0x00000001,     ///<LCD output mode is set to 16 bits per pixel
            output18bpp=0x00000002,     ///<LCD output mode is set to 18 bits per pixel
            output24bpp=0x00000003,     ///<LCD output mode is set to 24 bits per pixel
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,8),Register::ReadWriteAccess,ModeVal> mode{}; 
        namespace ModeValC{
            constexpr Register::FieldValue<decltype(mode),ModeVal::output12bpp> output12bpp{};
            constexpr Register::FieldValue<decltype(mode),ModeVal::output16bpp> output16bpp{};
            constexpr Register::FieldValue<decltype(mode),ModeVal::output18bpp> output18bpp{};
            constexpr Register::FieldValue<decltype(mode),ModeVal::output24bpp> output24bpp{};
        }
        ///Post Processing Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> pp{}; 
        namespace PpValC{
        }
        ///LCD Controller Vertical synchronization Pulse Setup Configuration
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> vspsu{}; 
        namespace VspsuValC{
        }
        ///LCD Controller Vertical synchronization Pulse Hold Configuration
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> vspho{}; 
        namespace VsphoValC{
        }
        ///LCD DISPLAY Guard Time
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(20,16),Register::ReadWriteAccess,unsigned> guardtime{}; 
        namespace GuardtimeValC{
        }
    }
    namespace LcdcLcdcfg6{    ///<LCD Controller Configuration Register 6
        using Addr = Register::Address<0xf0030018,0xffff00e8,0,unsigned>;
        ///PWM Clock Prescaler
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,0),Register::ReadWriteAccess,unsigned> pwmps{}; 
        namespace PwmpsValC{
        }
        ///LCD Controller PWM Signal Polarity
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> pwmpol{}; 
        namespace PwmpolValC{
        }
        ///LCD Controller PWM Compare Value
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> pwmcval{}; 
        namespace PwmcvalValC{
        }
    }
    namespace LcdcLcden{    ///<LCD Controller Enable Register
        using Addr = Register::Address<0xf0030020,0xfffffff0,0,unsigned>;
        ///LCD Controller Pixel Clock Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> clken{}; 
        namespace ClkenValC{
        }
        ///LCD Controller Horizontal and Vertical Synchronization Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> syncen{}; 
        namespace SyncenValC{
        }
        ///LCD Controller DISP Signal Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dispen{}; 
        namespace DispenValC{
        }
        ///LCD Controller Pulse Width Modulation Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> pwmen{}; 
        namespace PwmenValC{
        }
    }
    namespace LcdcLcddis{    ///<LCD Controller Disable Register
        using Addr = Register::Address<0xf0030024,0xfffff0f0,0,unsigned>;
        ///LCD Controller Pixel Clock Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> clkdis{}; 
        namespace ClkdisValC{
        }
        ///LCD Controller Horizontal and Vertical Synchronization Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> syncdis{}; 
        namespace SyncdisValC{
        }
        ///LCD Controller DISP Signal Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dispdis{}; 
        namespace DispdisValC{
        }
        ///LCD Controller Pulse Width Modulation Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> pwmdis{}; 
        namespace PwmdisValC{
        }
        ///LCD Controller Clock Reset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> clkrst{}; 
        namespace ClkrstValC{
        }
        ///LCD Controller Horizontal and Vertical Synchronization Reset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> syncrst{}; 
        namespace SyncrstValC{
        }
        ///LCD Controller DISP Signal Reset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> disprst{}; 
        namespace DisprstValC{
        }
        ///LCD Controller PWM Reset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> pwmrst{}; 
        namespace PwmrstValC{
        }
    }
    namespace LcdcLcdsr{    ///<LCD Controller Status Register
        using Addr = Register::Address<0xf0030028,0xffffffe0,0,unsigned>;
        ///Clock Status
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> clksts{}; 
        namespace ClkstsValC{
        }
        ///LCD Controller Synchronization status
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> lcdsts{}; 
        namespace LcdstsValC{
        }
        ///LCD Controller DISP Signal Status
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dispsts{}; 
        namespace DispstsValC{
        }
        ///LCD Controller PWM Signal Status
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> pwmsts{}; 
        namespace PwmstsValC{
        }
        ///Synchronization In Progress
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> sipsts{}; 
        namespace SipstsValC{
        }
    }
    namespace LcdcLcdier{    ///<LCD Controller Interrupt Enable Register
        using Addr = Register::Address<0xf003002c,0xffffc0e8,0,unsigned>;
        ///Start of Frame Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sofie{}; 
        namespace SofieValC{
        }
        ///LCD Disable Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> disie{}; 
        namespace DisieValC{
        }
        ///Power UP/Down Sequence Terminated Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dispie{}; 
        namespace DispieValC{
        }
        ///Output FIFO Error Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> fifoerrie{}; 
        namespace FifoerrieValC{
        }
        ///Base Layer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> baseie{}; 
        namespace BaseieValC{
        }
        ///Overlay 1 Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> ovr1ie{}; 
        namespace Ovr1ieValC{
        }
        ///Overlay 2 Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> ovr2ie{}; 
        namespace Ovr2ieValC{
        }
        ///High End Overlay Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> heoie{}; 
        namespace HeoieValC{
        }
        ///Hardware Cursor Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> hcrie{}; 
        namespace HcrieValC{
        }
        ///Post Processing Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> ppie{}; 
        namespace PpieValC{
        }
    }
    namespace LcdcLcdidr{    ///<LCD Controller Interrupt Disable Register
        using Addr = Register::Address<0xf0030030,0xffffc0e8,0,unsigned>;
        ///Start of Frame Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sofid{}; 
        namespace SofidValC{
        }
        ///LCD Disable Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> disid{}; 
        namespace DisidValC{
        }
        ///Power UP/Down Sequence Terminated Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dispid{}; 
        namespace DispidValC{
        }
        ///Output FIFO Error Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> fifoerrid{}; 
        namespace FifoerridValC{
        }
        ///Base Layer Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> baseid{}; 
        namespace BaseidValC{
        }
        ///Overlay 1 Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> ovr1id{}; 
        namespace Ovr1idValC{
        }
        ///Overlay 2 Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> ovr2id{}; 
        namespace Ovr2idValC{
        }
        ///High End Overlay Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> heoid{}; 
        namespace HeoidValC{
        }
        ///Hardware Cursor Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> hcrid{}; 
        namespace HcridValC{
        }
        ///Post Processing Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> ppid{}; 
        namespace PpidValC{
        }
    }
    namespace LcdcLcdimr{    ///<LCD Controller Interrupt Mask Register
        using Addr = Register::Address<0xf0030034,0xffffc0e8,0,unsigned>;
        ///Start of Frame Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sofim{}; 
        namespace SofimValC{
        }
        ///LCD Disable Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> disim{}; 
        namespace DisimValC{
        }
        ///Power UP/Down Sequence Terminated Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dispim{}; 
        namespace DispimValC{
        }
        ///Output FIFO Error Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> fifoerrim{}; 
        namespace FifoerrimValC{
        }
        ///Base Layer Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> baseim{}; 
        namespace BaseimValC{
        }
        ///Overlay 1 Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> ovr1im{}; 
        namespace Ovr1imValC{
        }
        ///Overlay 2 Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> ovr2im{}; 
        namespace Ovr2imValC{
        }
        ///High End Overlay Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> heoim{}; 
        namespace HeoimValC{
        }
        ///Hardware Cursor Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> hcrim{}; 
        namespace HcrimValC{
        }
        ///Post Processing Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> ppim{}; 
        namespace PpimValC{
        }
    }
    namespace LcdcLcdisr{    ///<LCD Controller Interrupt Status Register
        using Addr = Register::Address<0xf0030038,0xffffc0e8,0,unsigned>;
        ///Start of Frame Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sof{}; 
        namespace SofValC{
        }
        ///LCD Disable Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> dis{}; 
        namespace DisValC{
        }
        ///Power-up/Power-down Sequence Terminated Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> disp{}; 
        namespace DispValC{
        }
        ///Output FIFO Error
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> fifoerr{}; 
        namespace FifoerrValC{
        }
        ///Base Layer Raw Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> base{}; 
        namespace BaseValC{
        }
        ///Overlay 1 Raw Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> ovr1{}; 
        namespace Ovr1ValC{
        }
        ///Overlay 2 Raw Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> ovr2{}; 
        namespace Ovr2ValC{
        }
        ///High End Overlay Raw Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> heo{}; 
        namespace HeoValC{
        }
        ///Hardware Cursor Raw Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> hcr{}; 
        namespace HcrValC{
        }
        ///Post Processing Raw Interrupt Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> pp{}; 
        namespace PpValC{
        }
    }
    namespace LcdcBasecher{    ///<Base Layer Channel Enable Register
        using Addr = Register::Address<0xf0030040,0xfffffff8,0,unsigned>;
        ///Channel Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chen{}; 
        namespace ChenValC{
        }
        ///Update Overlay Attributes Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updateen{}; 
        namespace UpdateenValC{
        }
        ///Add Head Pointer Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qen{}; 
        namespace A2qenValC{
        }
    }
    namespace LcdcBasechdr{    ///<Base Layer Channel Disable Register
        using Addr = Register::Address<0xf0030044,0xfffffefe,0,unsigned>;
        ///Channel Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chdis{}; 
        namespace ChdisValC{
        }
        ///Channel Reset Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> chrst{}; 
        namespace ChrstValC{
        }
    }
    namespace LcdcBasechsr{    ///<Base Layer Channel Status Register
        using Addr = Register::Address<0xf0030048,0xfffffff8,0,unsigned>;
        ///Channel Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chsr{}; 
        namespace ChsrValC{
        }
        ///Update Overlay Attributes In Progress
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updatesr{}; 
        namespace UpdatesrValC{
        }
        ///Add To Queue Pending Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qsr{}; 
        namespace A2qsrValC{
        }
    }
    namespace LcdcBaseier{    ///<Base Layer Interrupt Enable Register
        using Addr = Register::Address<0xf003004c,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcBaseidr{    ///<Base Layer Interrupt Disabled Register
        using Addr = Register::Address<0xf0030050,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcBaseimr{    ///<Base Layer Interrupt Mask Register
        using Addr = Register::Address<0xf0030054,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcBaseisr{    ///<Base Layer Interrupt status Register
        using Addr = Register::Address<0xf0030058,0xffffff83,0,unsigned>;
        ///End of DMA Transfer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///DMA Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcBasehead{    ///<Base DMA Head Register
        using Addr = Register::Address<0xf003005c,0x00000003,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,2),Register::ReadWriteAccess,unsigned> head{}; 
        namespace HeadValC{
        }
    }
    namespace LcdcBaseaddr{    ///<Base DMA Address Register
        using Addr = Register::Address<0xf0030060,0x00000000,0,unsigned>;
        ///DMA Transfer Start Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> addr{}; 
        namespace AddrValC{
        }
    }
    namespace LcdcBasectrl{    ///<Base DMA Control Register
        using Addr = Register::Address<0xf0030064,0xffffffc0,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> dfetch{}; 
        namespace DfetchValC{
        }
        ///Lookup Table Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> lfetch{}; 
        namespace LfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dmaien{}; 
        namespace DmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscrien{}; 
        namespace DscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> addien{}; 
        namespace AddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> doneien{}; 
        namespace DoneienValC{
        }
    }
    namespace LcdcBasenext{    ///<Base DMA Next Register
        using Addr = Register::Address<0xf0030068,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> next{}; 
        namespace NextValC{
        }
    }
    namespace LcdcBasecfg0{    ///<Base Configuration register 0
        using Addr = Register::Address<0xf003006c,0xfffffece,0,unsigned>;
        ///Source Interface
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sif{}; 
        namespace SifValC{
        }
        ///AHB Burst Length
        enum class BlenVal {
            ahbSingle=0x00000000,     ///<AHB Access is started as soon as there is enough space in the FIFO to store one data. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr4=0x00000001,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 4 data. An AHB INCR4 Burst is used. SINGLE, INCR and INCR4 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr8=0x00000002,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 8 data. An AHB INCR8 Burst is used. SINGLE, INCR, INCR4 and INCR8 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr16=0x00000003,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 16 data. An AHB INCR16 Burst is used. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,4),Register::ReadWriteAccess,BlenVal> blen{}; 
        namespace BlenValC{
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbSingle> ahbSingle{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbIncr4> ahbIncr4{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbIncr8> ahbIncr8{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbIncr16> ahbIncr16{};
        }
        ///Defined Length Burst Only For Channel Bus Transaction.
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dlbo{}; 
        namespace DlboValC{
        }
    }
    namespace LcdcBasecfg1{    ///<Base Configuration register 1
        using Addr = Register::Address<0xf0030070,0xfffffc0e,0,unsigned>;
        ///Color Lookup Table Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> cluten{}; 
        namespace ClutenValC{
        }
        ///RGB Input Mode Selection
        enum class RgbmodeVal {
            v12bppRgb444=0x00000000,     ///<12 bpp RGB 444
            v16bppArgb4444=0x00000001,     ///<16 bpp ARGB 4444
            v16bppRgba4444=0x00000002,     ///<16 bpp RGBA 4444
            v16bppRgb565=0x00000003,     ///<16 bpp RGB 565
            v16bppTrgb1555=0x00000004,     ///<16 bpp TRGB 1555
            v18bppRgb666=0x00000005,     ///<18 bpp RGB 666
            v18bppRgb666packed=0x00000006,     ///<18 bpp RGB 666 PACKED
            v19bppTrgb1666=0x00000007,     ///<19 bpp TRGB 1666
            v19bppTrgbPacked=0x00000008,     ///<19 bpp TRGB 1666 PACKED
            v24bppRgb888=0x00000009,     ///<24 bpp RGB 888
            v24bppRgb888Packed=0x0000000a,     ///<24 bpp RGB 888 PACKED
            v25bppTrgb1888=0x0000000b,     ///<25 bpp TRGB 1888
            v32bppArgb8888=0x0000000c,     ///<32 bpp ARGB 8888
            v32bppRgba8888=0x0000000d,     ///<32 bpp RGBA 8888
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,4),Register::ReadWriteAccess,RgbmodeVal> rgbmode{}; 
        namespace RgbmodeValC{
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v12bppRgb444> v12bppRgb444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppArgb4444> v16bppArgb4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgba4444> v16bppRgba4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgb565> v16bppRgb565{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppTrgb1555> v16bppTrgb1555{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666> v18bppRgb666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666packed> v18bppRgb666packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgb1666> v19bppTrgb1666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgbPacked> v19bppTrgbPacked{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888> v24bppRgb888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888Packed> v24bppRgb888Packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v25bppTrgb1888> v25bppTrgb1888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppArgb8888> v32bppArgb8888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppRgba8888> v32bppRgba8888{};
        }
        ///Color Lookup Table Input Mode Selection
        enum class ClutmodeVal {
            clut1bpp=0x00000000,     ///<color lookup table mode set to 1 bit per pixel
            clut2bpp=0x00000001,     ///<color lookup table mode set to 2 bits per pixel
            clut4bpp=0x00000002,     ///<color lookup table mode set to 4 bits per pixel
            clut8bpp=0x00000003,     ///<color lookup table mode set to 8 bits per pixel
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,8),Register::ReadWriteAccess,ClutmodeVal> clutmode{}; 
        namespace ClutmodeValC{
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut1bpp> clut1bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut2bpp> clut2bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut4bpp> clut4bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut8bpp> clut8bpp{};
        }
    }
    namespace LcdcBasecfg2{    ///<Base Configuration register 2
        using Addr = Register::Address<0xf0030074,0x00000000,0,unsigned>;
        ///Horizontal Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> xstride{}; 
        namespace XstrideValC{
        }
    }
    namespace LcdcBasecfg3{    ///<Base Configuration register 3
        using Addr = Register::Address<0xf0030078,0xff000000,0,unsigned>;
        ///Blue Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bdef{}; 
        namespace BdefValC{
        }
        ///Green Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gdef{}; 
        namespace GdefValC{
        }
        ///Red Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rdef{}; 
        namespace RdefValC{
        }
    }
    namespace LcdcBasecfg4{    ///<Base Configuration register 4
        using Addr = Register::Address<0xf003007c,0xfffff4ff,0,unsigned>;
        ///Use DMA Data Path
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Use Replication logic to expand RGB color to 24 bits
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> rep{}; 
        namespace RepValC{
        }
        ///Discard Area Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> discen{}; 
        namespace DiscenValC{
        }
    }
    namespace LcdcBasecfg5{    ///<Base Configuration register 5
        using Addr = Register::Address<0xf0030080,0xf800f800,0,unsigned>;
        ///Discard Area horizontal coordinate
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> discxpos{}; 
        namespace DiscxposValC{
        }
        ///Discard Area Vertical coordinate
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> discypos{}; 
        namespace DiscyposValC{
        }
    }
    namespace LcdcBasecfg6{    ///<Base Configuration register 6
        using Addr = Register::Address<0xf0030084,0xf800f800,0,unsigned>;
        ///Discard Area Horizontal Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> discxsize{}; 
        namespace DiscxsizeValC{
        }
        ///Discard Area Vertical Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> discysize{}; 
        namespace DiscysizeValC{
        }
    }
    namespace LcdcOvr1cher{    ///<Overlay 1 Channel Enable Register
        using Addr = Register::Address<0xf0030140,0xfffffff8,0,unsigned>;
        ///Channel Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chen{}; 
        namespace ChenValC{
        }
        ///Update Overlay Attributes Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updateen{}; 
        namespace UpdateenValC{
        }
        ///Add Head Pointer Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qen{}; 
        namespace A2qenValC{
        }
    }
    namespace LcdcOvr1chdr{    ///<Overlay 1 Channel Disable Register
        using Addr = Register::Address<0xf0030144,0xfffffefe,0,unsigned>;
        ///Channel Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chdis{}; 
        namespace ChdisValC{
        }
        ///Channel Reset Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> chrst{}; 
        namespace ChrstValC{
        }
    }
    namespace LcdcOvr1chsr{    ///<Overlay 1 Channel Status Register
        using Addr = Register::Address<0xf0030148,0xfffffff8,0,unsigned>;
        ///Channel Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chsr{}; 
        namespace ChsrValC{
        }
        ///Update Overlay Attributes In Progress
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updatesr{}; 
        namespace UpdatesrValC{
        }
        ///Add to Queue Pending Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qsr{}; 
        namespace A2qsrValC{
        }
    }
    namespace LcdcOvr1ier{    ///<Overlay 1 Interrupt Enable Register
        using Addr = Register::Address<0xf003014c,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr1idr{    ///<Overlay 1 Interrupt Disable Register
        using Addr = Register::Address<0xf0030150,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr1imr{    ///<Overlay 1 Interrupt Mask Register
        using Addr = Register::Address<0xf0030154,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr1isr{    ///<Overlay 1 Interrupt Status Register
        using Addr = Register::Address<0xf0030158,0xffffff83,0,unsigned>;
        ///End of DMA Transfer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///DMA Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Detected Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr1head{    ///<Overlay 1 DMA Head Register
        using Addr = Register::Address<0xf003015c,0x00000003,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,2),Register::ReadWriteAccess,unsigned> head{}; 
        namespace HeadValC{
        }
    }
    namespace LcdcOvr1addr{    ///<Overlay 1 DMA Address Register
        using Addr = Register::Address<0xf0030160,0x00000000,0,unsigned>;
        ///DMA Transfer Overlay 1 Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> addr{}; 
        namespace AddrValC{
        }
    }
    namespace LcdcOvr1ctrl{    ///<Overlay1 DMA Control Register
        using Addr = Register::Address<0xf0030164,0xffffffc0,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> dfetch{}; 
        namespace DfetchValC{
        }
        ///Lookup Table Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> lfetch{}; 
        namespace LfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dmaien{}; 
        namespace DmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscrien{}; 
        namespace DscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> addien{}; 
        namespace AddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> doneien{}; 
        namespace DoneienValC{
        }
    }
    namespace LcdcOvr1next{    ///<Overlay1 DMA Next Register
        using Addr = Register::Address<0xf0030168,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> next{}; 
        namespace NextValC{
        }
    }
    namespace LcdcOvr1cfg0{    ///<Overlay 1 Configuration 0 Register
        using Addr = Register::Address<0xf003016c,0xffffcece,0,unsigned>;
        ///Source Interface
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sif{}; 
        namespace SifValC{
        }
        ///AHB Burst Length
        enum class BlenVal {
            ahbBlenSingle=0x00000000,     ///<AHB Access is started as soon as there is enough space in the FIFO to store one data. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr4=0x00000001,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 4 data. An AHB INCR4 Burst is used. SINGLE, INCR and INCR4 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr8=0x00000002,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 8 data. An AHB INCR8 Burst is used. SINGLE, INCR, INCR4 and INCR8 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr16=0x00000003,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 16 data. An AHB INCR16 Burst is used. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,4),Register::ReadWriteAccess,BlenVal> blen{}; 
        namespace BlenValC{
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenSingle> ahbBlenSingle{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr4> ahbBlenIncr4{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr8> ahbBlenIncr8{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr16> ahbBlenIncr16{};
        }
        ///Defined Length Burst Only for Channel Bus Transaction.
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dlbo{}; 
        namespace DlboValC{
        }
        ///Hardware Rotation Optimization Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> rotdis{}; 
        namespace RotdisValC{
        }
        ///Hardware Rotation Lock Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> lockdis{}; 
        namespace LockdisValC{
        }
    }
    namespace LcdcOvr1cfg1{    ///<Overlay 1 Configuration 1 Register
        using Addr = Register::Address<0xf0030170,0xfffffc0e,0,unsigned>;
        ///Color Lookup Table Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> cluten{}; 
        namespace ClutenValC{
        }
        ///RGB Input Mode Selection
        enum class RgbmodeVal {
            v12bppRgb444=0x00000000,     ///<12 bpp RGB 444
            v16bppArgb4444=0x00000001,     ///<16 bpp ARGB 4444
            v16bppRgba4444=0x00000002,     ///<16 bpp RGBA 4444
            v16bppRgb565=0x00000003,     ///<16 bpp RGB 565
            v16bppTrgb1555=0x00000004,     ///<16 bpp TRGB 1555
            v18bppRgb666=0x00000005,     ///<18 bpp RGB 666
            v18bppRgb666packed=0x00000006,     ///<18 bpp RGB 666 PACKED
            v19bppTrgb1666=0x00000007,     ///<19 bpp TRGB 1666
            v19bppTrgbPacked=0x00000008,     ///<19 bpp TRGB 1666 PACKED
            v24bppRgb888=0x00000009,     ///<24 bpp RGB 888
            v24bppRgb888Packed=0x0000000a,     ///<24 bpp RGB 888 PACKED
            v25bppTrgb1888=0x0000000b,     ///<25 bpp TRGB 1888
            v32bppArgb8888=0x0000000c,     ///<32 bpp ARGB 8888
            v32bppRgba8888=0x0000000d,     ///<32 bpp RGBA 8888
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,4),Register::ReadWriteAccess,RgbmodeVal> rgbmode{}; 
        namespace RgbmodeValC{
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v12bppRgb444> v12bppRgb444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppArgb4444> v16bppArgb4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgba4444> v16bppRgba4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgb565> v16bppRgb565{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppTrgb1555> v16bppTrgb1555{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666> v18bppRgb666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666packed> v18bppRgb666packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgb1666> v19bppTrgb1666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgbPacked> v19bppTrgbPacked{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888> v24bppRgb888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888Packed> v24bppRgb888Packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v25bppTrgb1888> v25bppTrgb1888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppArgb8888> v32bppArgb8888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppRgba8888> v32bppRgba8888{};
        }
        ///Color Lookup table input mode selection
        enum class ClutmodeVal {
            clut1bpp=0x00000000,     ///<color lookup table mode set to 1 bit per pixel
            clut2bpp=0x00000001,     ///<color lookup table mode set to 2 bits per pixel
            clut4bpp=0x00000002,     ///<color lookup table mode set to 4 bits per pixel
            clut8bpp=0x00000003,     ///<color lookup table mode set to 8 bits per pixel
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,8),Register::ReadWriteAccess,ClutmodeVal> clutmode{}; 
        namespace ClutmodeValC{
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut1bpp> clut1bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut2bpp> clut2bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut4bpp> clut4bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut8bpp> clut8bpp{};
        }
    }
    namespace LcdcOvr1cfg2{    ///<Overlay 1 Configuration 2 Register
        using Addr = Register::Address<0xf0030174,0xf800f800,0,unsigned>;
        ///Horizontal Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xpos{}; 
        namespace XposValC{
        }
        ///Vertical Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ypos{}; 
        namespace YposValC{
        }
    }
    namespace LcdcOvr1cfg3{    ///<Overlay 1 Configuration 3 Register
        using Addr = Register::Address<0xf0030178,0xf800f800,0,unsigned>;
        ///Horizontal Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xsize{}; 
        namespace XsizeValC{
        }
        ///Vertical Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ysize{}; 
        namespace YsizeValC{
        }
    }
    namespace LcdcOvr1cfg4{    ///<Overlay 1 Configuration 4 Register
        using Addr = Register::Address<0xf003017c,0x00000000,0,unsigned>;
        ///Horizontal Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> xstride{}; 
        namespace XstrideValC{
        }
    }
    namespace LcdcOvr1cfg5{    ///<Overlay 1 Configuration 5 Register
        using Addr = Register::Address<0xf0030180,0x00000000,0,unsigned>;
        ///Pixel Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> pstride{}; 
        namespace PstrideValC{
        }
    }
    namespace LcdcOvr1cfg6{    ///<Overlay 1 Configuration 6 Register
        using Addr = Register::Address<0xf0030184,0xff000000,0,unsigned>;
        ///Blue Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bdef{}; 
        namespace BdefValC{
        }
        ///Green Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gdef{}; 
        namespace GdefValC{
        }
        ///Red Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rdef{}; 
        namespace RdefValC{
        }
    }
    namespace LcdcOvr1cfg7{    ///<Overlay 1 Configuration 7 Register
        using Addr = Register::Address<0xf0030188,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bkey{}; 
        namespace BkeyValC{
        }
        ///Green Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gkey{}; 
        namespace GkeyValC{
        }
        ///Red Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rkey{}; 
        namespace RkeyValC{
        }
    }
    namespace LcdcOvr1cfg8{    ///<Overlay 1 Configuration 8Register
        using Addr = Register::Address<0xf003018c,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bmask{}; 
        namespace BmaskValC{
        }
        ///Green Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gmask{}; 
        namespace GmaskValC{
        }
        ///Red Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rmask{}; 
        namespace RmaskValC{
        }
    }
    namespace LcdcOvr1cfg9{    ///<Overlay 1 Configuration 9 Register
        using Addr = Register::Address<0xf0030190,0xff00f800,0,unsigned>;
        ///Blender Chroma Key Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> crkey{}; 
        namespace CrkeyValC{
        }
        ///Blender Inverted Blender Output Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> inv{}; 
        namespace InvValC{
        }
        ///Blender Iterated Color Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> iter2bl{}; 
        namespace Iter2blValC{
        }
        ///Blender Use Iterated Color
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> iter{}; 
        namespace IterValC{
        }
        ///Blender Reverse Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> revalpha{}; 
        namespace RevalphaValC{
        }
        ///Blender Global Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> gaen{}; 
        namespace GaenValC{
        }
        ///Blender Local Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> laen{}; 
        namespace LaenValC{
        }
        ///Blender Overlay Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,7),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///Blender DMA Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Use Replication logic to expand RGB color to 24 bits
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> rep{}; 
        namespace RepValC{
        }
        ///Destination Chroma Keying
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> dstkey{}; 
        namespace DstkeyValC{
        }
        ///Blender Global Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> ga{}; 
        namespace GaValC{
        }
    }
    namespace LcdcOvr2cher{    ///<Overlay 2 Channel Enable Register
        using Addr = Register::Address<0xf0030240,0xfffffff8,0,unsigned>;
        ///Channel Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chen{}; 
        namespace ChenValC{
        }
        ///Update Overlay Attributes Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updateen{}; 
        namespace UpdateenValC{
        }
        ///Add Head Pointer Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qen{}; 
        namespace A2qenValC{
        }
    }
    namespace LcdcOvr2chdr{    ///<Overlay 2 Channel Disable Register
        using Addr = Register::Address<0xf0030244,0xfffffefe,0,unsigned>;
        ///Channel Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chdis{}; 
        namespace ChdisValC{
        }
        ///Channel Reset Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> chrst{}; 
        namespace ChrstValC{
        }
    }
    namespace LcdcOvr2chsr{    ///<Overlay 2 Channel Status Register
        using Addr = Register::Address<0xf0030248,0xfffffff8,0,unsigned>;
        ///Channel Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chsr{}; 
        namespace ChsrValC{
        }
        ///Update Overlay Attributes In Progress
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updatesr{}; 
        namespace UpdatesrValC{
        }
        ///Add To Queue Pending Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qsr{}; 
        namespace A2qsrValC{
        }
    }
    namespace LcdcOvr2ier{    ///<Overlay 2 Interrupt Enable Register
        using Addr = Register::Address<0xf003024c,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr2idr{    ///<Overlay 2 Interrupt Disable Register
        using Addr = Register::Address<0xf0030250,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr2imr{    ///<Overlay 2 Interrupt Mask Register
        using Addr = Register::Address<0xf0030254,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr2isr{    ///<Overlay 2 Interrupt status Register
        using Addr = Register::Address<0xf0030258,0xffffff83,0,unsigned>;
        ///End of DMA Transfer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///DMA Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End Of List Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcOvr2head{    ///<Overlay 2 DMA Head Register
        using Addr = Register::Address<0xf003025c,0x00000003,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,2),Register::ReadWriteAccess,unsigned> head{}; 
        namespace HeadValC{
        }
    }
    namespace LcdcOvr2addr{    ///<Overlay 2 DMA Address Register
        using Addr = Register::Address<0xf0030260,0x00000000,0,unsigned>;
        ///DMA Transfer Overlay 2 Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> addr{}; 
        namespace AddrValC{
        }
    }
    namespace LcdcOvr2ctrl{    ///<Overlay 2 DMA Control Register
        using Addr = Register::Address<0xf0030264,0xffffffc0,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> dfetch{}; 
        namespace DfetchValC{
        }
        ///Lookup Table Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> lfetch{}; 
        namespace LfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dmaien{}; 
        namespace DmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscrien{}; 
        namespace DscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> addien{}; 
        namespace AddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> doneien{}; 
        namespace DoneienValC{
        }
    }
    namespace LcdcOvr2next{    ///<Overlay 2 DMA Next Register
        using Addr = Register::Address<0xf0030268,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> next{}; 
        namespace NextValC{
        }
    }
    namespace LcdcOvr2cfg0{    ///<Overlay 2 Configuration 0 Register
        using Addr = Register::Address<0xf003026c,0xffffcecf,0,unsigned>;
        ///AHB Burst Length
        enum class BlenVal {
            ahbSingle=0x00000000,     ///<AHB Access is started as soon as there is enough space in the FIFO to store one data. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr4=0x00000001,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 4 data. An AHB INCR4 Burst is used. SINGLE, INCR and INCR4 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr8=0x00000002,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 8 data. An AHB INCR8 Burst is used. SINGLE, INCR, INCR4 and INCR8 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr16=0x00000003,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 16 data. An AHB INCR16 Burst is used. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,4),Register::ReadWriteAccess,BlenVal> blen{}; 
        namespace BlenValC{
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbSingle> ahbSingle{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbIncr4> ahbIncr4{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbIncr8> ahbIncr8{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbIncr16> ahbIncr16{};
        }
        ///Defined Length Burst Only For Channel Bus Transaction.
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dlbo{}; 
        namespace DlboValC{
        }
        ///Hardware Rotation Optimization Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> rotdis{}; 
        namespace RotdisValC{
        }
        ///Hardware Rotation Lock Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> lockdis{}; 
        namespace LockdisValC{
        }
    }
    namespace LcdcOvr2cfg1{    ///<Overlay 2 Configuration 1 Register
        using Addr = Register::Address<0xf0030270,0xfffffc0e,0,unsigned>;
        ///Color Lookup Table Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> cluten{}; 
        namespace ClutenValC{
        }
        ///RGB Input Mode Selection
        enum class RgbmodeVal {
            v12bppRgb444=0x00000000,     ///<12 bpp RGB 444
            v16bppArgb4444=0x00000001,     ///<16 bpp ARGB 4444
            v16bppRgba4444=0x00000002,     ///<16 bpp RGBA 4444
            v16bppRgb565=0x00000003,     ///<16 bpp RGB 565
            v16bppTrgb1555=0x00000004,     ///<16 bpp TRGB 1555
            v18bppRgb666=0x00000005,     ///<18 bpp RGB 666
            v18bppRgb666packed=0x00000006,     ///<18 bpp RGB 666 PACKED
            v19bppTrgb1666=0x00000007,     ///<19 bpp TRGB 1666
            v19bppTrgbPacked=0x00000008,     ///<19 bpp TRGB 1666 PACKED
            v24bppRgb888=0x00000009,     ///<24 bpp RGB 888
            v24bppRgb888Packed=0x0000000a,     ///<24 bpp RGB 888 PACKED
            v25bppTrgb1888=0x0000000b,     ///<25 bpp TRGB 1888
            v32bppArgb8888=0x0000000c,     ///<32 bpp ARGB 8888
            v32bppRgba8888=0x0000000d,     ///<32 bpp RGBA 8888
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,4),Register::ReadWriteAccess,RgbmodeVal> rgbmode{}; 
        namespace RgbmodeValC{
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v12bppRgb444> v12bppRgb444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppArgb4444> v16bppArgb4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgba4444> v16bppRgba4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgb565> v16bppRgb565{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppTrgb1555> v16bppTrgb1555{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666> v18bppRgb666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666packed> v18bppRgb666packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgb1666> v19bppTrgb1666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgbPacked> v19bppTrgbPacked{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888> v24bppRgb888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888Packed> v24bppRgb888Packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v25bppTrgb1888> v25bppTrgb1888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppArgb8888> v32bppArgb8888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppRgba8888> v32bppRgba8888{};
        }
        ///Color Lookup table input mode selection
        enum class ClutmodeVal {
            clut1bpp=0x00000000,     ///<color lookup table mode set to 1 bit per pixel
            clut2bpp=0x00000001,     ///<color lookup table mode set to 2 bits per pixel
            clut4bpp=0x00000002,     ///<color lookup table mode set to 4 bits per pixel
            clut8bpp=0x00000003,     ///<color lookup table mode set to 8 bits per pixel
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,8),Register::ReadWriteAccess,ClutmodeVal> clutmode{}; 
        namespace ClutmodeValC{
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut1bpp> clut1bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut2bpp> clut2bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut4bpp> clut4bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut8bpp> clut8bpp{};
        }
    }
    namespace LcdcOvr2cfg2{    ///<Overlay 2 Configuration 2 Register
        using Addr = Register::Address<0xf0030274,0xf800f800,0,unsigned>;
        ///Horizontal Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xpos{}; 
        namespace XposValC{
        }
        ///Vertical Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ypos{}; 
        namespace YposValC{
        }
    }
    namespace LcdcOvr2cfg3{    ///<Overlay 2 Configuration 3 Register
        using Addr = Register::Address<0xf0030278,0xf800f800,0,unsigned>;
        ///Horizontal Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xsize{}; 
        namespace XsizeValC{
        }
        ///Vertical Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ysize{}; 
        namespace YsizeValC{
        }
    }
    namespace LcdcOvr2cfg4{    ///<Overlay 2 Configuration 4 Register
        using Addr = Register::Address<0xf003027c,0x00000000,0,unsigned>;
        ///Horizontal Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> xstride{}; 
        namespace XstrideValC{
        }
    }
    namespace LcdcOvr2cfg5{    ///<Overlay 2 Configuration 5 Register
        using Addr = Register::Address<0xf0030280,0x00000000,0,unsigned>;
        ///Pixel Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> pstride{}; 
        namespace PstrideValC{
        }
    }
    namespace LcdcOvr2cfg6{    ///<Overlay 2 Configuration 6 Register
        using Addr = Register::Address<0xf0030284,0xff000000,0,unsigned>;
        ///Blue Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bdef{}; 
        namespace BdefValC{
        }
        ///Green Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gdef{}; 
        namespace GdefValC{
        }
        ///Red Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rdef{}; 
        namespace RdefValC{
        }
    }
    namespace LcdcOvr2cfg7{    ///<Overlay 2 Configuration 7 Register
        using Addr = Register::Address<0xf0030288,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bkey{}; 
        namespace BkeyValC{
        }
        ///Green Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gkey{}; 
        namespace GkeyValC{
        }
        ///Red Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rkey{}; 
        namespace RkeyValC{
        }
    }
    namespace LcdcOvr2cfg8{    ///<Overlay 2 Configuration 8 Register
        using Addr = Register::Address<0xf003028c,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bmask{}; 
        namespace BmaskValC{
        }
        ///Green Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gmask{}; 
        namespace GmaskValC{
        }
        ///Red Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rmask{}; 
        namespace RmaskValC{
        }
    }
    namespace LcdcOvr2cfg9{    ///<Overlay 2 Configuration 9 Register
        using Addr = Register::Address<0xf0030290,0xff00f800,0,unsigned>;
        ///Blender Chroma Key Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> crkey{}; 
        namespace CrkeyValC{
        }
        ///Blender Inverted Blender Output Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> inv{}; 
        namespace InvValC{
        }
        ///Blender Iterated Color Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> iter2bl{}; 
        namespace Iter2blValC{
        }
        ///Blender Use Iterated Color
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> iter{}; 
        namespace IterValC{
        }
        ///Blender Reverse Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> revalpha{}; 
        namespace RevalphaValC{
        }
        ///Blender Global Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> gaen{}; 
        namespace GaenValC{
        }
        ///Blender Local Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> laen{}; 
        namespace LaenValC{
        }
        ///Blender Overlay Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,7),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///Blender DMA Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Use Replication logic to expand RGB color to 24 bits
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> rep{}; 
        namespace RepValC{
        }
        ///Destination Chroma Keying
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> dstkey{}; 
        namespace DstkeyValC{
        }
        ///Blender Global Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> ga{}; 
        namespace GaValC{
        }
    }
    namespace LcdcHeocher{    ///<High-End Overlay Channel Enable Register
        using Addr = Register::Address<0xf0030340,0xfffffff8,0,unsigned>;
        ///Channel Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chen{}; 
        namespace ChenValC{
        }
        ///Update Overlay Attributes Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updateen{}; 
        namespace UpdateenValC{
        }
        ///Add Head Pointer Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qen{}; 
        namespace A2qenValC{
        }
    }
    namespace LcdcHeochdr{    ///<High-End Overlay Channel Disable Register
        using Addr = Register::Address<0xf0030344,0xfffffefe,0,unsigned>;
        ///Channel Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chdis{}; 
        namespace ChdisValC{
        }
        ///Channel Reset Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> chrst{}; 
        namespace ChrstValC{
        }
    }
    namespace LcdcHeochsr{    ///<High-End Overlay Channel Status Register
        using Addr = Register::Address<0xf0030348,0xfffffff8,0,unsigned>;
        ///Channel Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chsr{}; 
        namespace ChsrValC{
        }
        ///Update Overlay Attributes In Progress
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updatesr{}; 
        namespace UpdatesrValC{
        }
        ///Add To Queue Pending Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qsr{}; 
        namespace A2qsrValC{
        }
    }
    namespace LcdcHeoier{    ///<High-End Overlay Interrupt Enable Register
        using Addr = Register::Address<0xf003034c,0xff838383,0,unsigned>;
        ///End of DMA Transfer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///End of DMA Transfer for U or UV Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> udma{}; 
        namespace UdmaValC{
        }
        ///Descriptor Loaded for U or UV Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> udscr{}; 
        namespace UdscrValC{
        }
        ///Head Descriptor Loaded for U or UV Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> uadd{}; 
        namespace UaddValC{
        }
        ///End of List for U or UV Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> udone{}; 
        namespace UdoneValC{
        }
        ///Overflow for U or UV Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(14,14),Register::ReadWriteAccess,unsigned> uovr{}; 
        namespace UovrValC{
        }
        ///End of DMA for V Chrominance Transfer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(18,18),Register::ReadWriteAccess,unsigned> vdma{}; 
        namespace VdmaValC{
        }
        ///Descriptor Loaded for V Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,19),Register::ReadWriteAccess,unsigned> vdscr{}; 
        namespace VdscrValC{
        }
        ///Head Descriptor Loaded for V Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(20,20),Register::ReadWriteAccess,unsigned> vadd{}; 
        namespace VaddValC{
        }
        ///End of List for V Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(21,21),Register::ReadWriteAccess,unsigned> vdone{}; 
        namespace VdoneValC{
        }
        ///Overflow for V Chrominance Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(22,22),Register::ReadWriteAccess,unsigned> vovr{}; 
        namespace VovrValC{
        }
    }
    namespace LcdcHeoidr{    ///<High-End Overlay Interrupt Disable Register
        using Addr = Register::Address<0xf0030350,0xff838383,0,unsigned>;
        ///End of DMA Transfer Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///End of DMA Transfer for U or UV Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> udma{}; 
        namespace UdmaValC{
        }
        ///Descriptor Loaded for U or UV Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> udscr{}; 
        namespace UdscrValC{
        }
        ///Head Descriptor Loaded for U or UV Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> uadd{}; 
        namespace UaddValC{
        }
        ///End of List Interrupt for U or UV Chrominance Component Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> udone{}; 
        namespace UdoneValC{
        }
        ///Overflow Interrupt for U or UV Chrominance Component Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(14,14),Register::ReadWriteAccess,unsigned> uovr{}; 
        namespace UovrValC{
        }
        ///End of DMA Transfer for V Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(18,18),Register::ReadWriteAccess,unsigned> vdma{}; 
        namespace VdmaValC{
        }
        ///Descriptor Loaded for V Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,19),Register::ReadWriteAccess,unsigned> vdscr{}; 
        namespace VdscrValC{
        }
        ///Head Descriptor Loaded for V Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(20,20),Register::ReadWriteAccess,unsigned> vadd{}; 
        namespace VaddValC{
        }
        ///End of List for V Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(21,21),Register::ReadWriteAccess,unsigned> vdone{}; 
        namespace VdoneValC{
        }
        ///Overflow for V Chrominance Component Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(22,22),Register::ReadWriteAccess,unsigned> vovr{}; 
        namespace VovrValC{
        }
    }
    namespace LcdcHeoimr{    ///<High-End Overlay Interrupt Mask Register
        using Addr = Register::Address<0xf0030354,0xff838383,0,unsigned>;
        ///End of DMA Transfer Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///End of DMA Transfer for U or UV Chrominance Component Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> udma{}; 
        namespace UdmaValC{
        }
        ///Descriptor Loaded for U or UV Chrominance Component Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> udscr{}; 
        namespace UdscrValC{
        }
        ///Head Descriptor Loaded for U or UV Chrominance Component Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> uadd{}; 
        namespace UaddValC{
        }
        ///End of List for U or UV Chrominance Component Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> udone{}; 
        namespace UdoneValC{
        }
        ///Overflow for U Chrominance Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(14,14),Register::ReadWriteAccess,unsigned> uovr{}; 
        namespace UovrValC{
        }
        ///End of DMA Transfer for V Chrominance Component Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(18,18),Register::ReadWriteAccess,unsigned> vdma{}; 
        namespace VdmaValC{
        }
        ///Descriptor Loaded for V Chrominance Component Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,19),Register::ReadWriteAccess,unsigned> vdscr{}; 
        namespace VdscrValC{
        }
        ///Head Descriptor Loaded for V Chrominance Component Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(20,20),Register::ReadWriteAccess,unsigned> vadd{}; 
        namespace VaddValC{
        }
        ///End of List for V Chrominance Component Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(21,21),Register::ReadWriteAccess,unsigned> vdone{}; 
        namespace VdoneValC{
        }
        ///Overflow for V Chrominance Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(22,22),Register::ReadWriteAccess,unsigned> vovr{}; 
        namespace VovrValC{
        }
    }
    namespace LcdcHeoisr{    ///<High-End Overlay Interrupt Status Register
        using Addr = Register::Address<0xf0030358,0xff838383,0,unsigned>;
        ///End of DMA Transfer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///DMA Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///End of DMA Transfer for U component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> udma{}; 
        namespace UdmaValC{
        }
        ///DMA Descriptor Loaded for U component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(11,11),Register::ReadWriteAccess,unsigned> udscr{}; 
        namespace UdscrValC{
        }
        ///Head Descriptor Loaded for U component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> uadd{}; 
        namespace UaddValC{
        }
        ///End of List Detected for U component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> udone{}; 
        namespace UdoneValC{
        }
        ///Overflow Detected for U component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(14,14),Register::ReadWriteAccess,unsigned> uovr{}; 
        namespace UovrValC{
        }
        ///End of DMA Transfer for V component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(18,18),Register::ReadWriteAccess,unsigned> vdma{}; 
        namespace VdmaValC{
        }
        ///DMA Descriptor Loaded for V component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,19),Register::ReadWriteAccess,unsigned> vdscr{}; 
        namespace VdscrValC{
        }
        ///Head Descriptor Loaded for V component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(20,20),Register::ReadWriteAccess,unsigned> vadd{}; 
        namespace VaddValC{
        }
        ///End of List Detected for V component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(21,21),Register::ReadWriteAccess,unsigned> vdone{}; 
        namespace VdoneValC{
        }
        ///Overflow Detected for V component
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(22,22),Register::ReadWriteAccess,unsigned> vovr{}; 
        namespace VovrValC{
        }
    }
    namespace LcdcHeohead{    ///<High-End Overlay DMA Head Register
        using Addr = Register::Address<0xf003035c,0x00000003,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,2),Register::ReadWriteAccess,unsigned> head{}; 
        namespace HeadValC{
        }
    }
    namespace LcdcHeoaddr{    ///<High-End Overlay DMA Address Register
        using Addr = Register::Address<0xf0030360,0x00000000,0,unsigned>;
        ///DMA Transfer start Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> addr{}; 
        namespace AddrValC{
        }
    }
    namespace LcdcHeoctrl{    ///<High-End Overlay DMA Control Register
        using Addr = Register::Address<0xf0030364,0xffffffc0,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> dfetch{}; 
        namespace DfetchValC{
        }
        ///Lookup Table Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> lfetch{}; 
        namespace LfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dmaien{}; 
        namespace DmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscrien{}; 
        namespace DscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> addien{}; 
        namespace AddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> doneien{}; 
        namespace DoneienValC{
        }
    }
    namespace LcdcHeonext{    ///<High-End Overlay DMA Next Register
        using Addr = Register::Address<0xf0030368,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> next{}; 
        namespace NextValC{
        }
    }
    namespace LcdcHeouhead{    ///<High-End Overlay U DMA Head Register
        using Addr = Register::Address<0xf003036c,0x00000000,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> uhead{}; 
        namespace UheadValC{
        }
    }
    namespace LcdcHeouaddr{    ///<High-End Overlay U DMA Address Register
        using Addr = Register::Address<0xf0030370,0x00000000,0,unsigned>;
        ///DMA Transfer Start Address for U or UV Chrominance
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> uaddr{}; 
        namespace UaddrValC{
        }
    }
    namespace LcdcHeouctrl{    ///<High-End Overlay U DMA control Register
        using Addr = Register::Address<0xf0030374,0xffffffc2,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> udfetch{}; 
        namespace UdfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> udmaien{}; 
        namespace UdmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> udscrien{}; 
        namespace UdscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> uaddien{}; 
        namespace UaddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> udoneien{}; 
        namespace UdoneienValC{
        }
    }
    namespace LcdcHeounext{    ///<High-End Overlay U DMA Next Register
        using Addr = Register::Address<0xf0030378,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> unext{}; 
        namespace UnextValC{
        }
    }
    namespace LcdcHeovhead{    ///<High-End Overlay V DMA Head Register
        using Addr = Register::Address<0xf003037c,0x00000000,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> vhead{}; 
        namespace VheadValC{
        }
    }
    namespace LcdcHeovaddr{    ///<High-End Overlay V DMA Address Register
        using Addr = Register::Address<0xf0030380,0x00000000,0,unsigned>;
        ///DMA Transfer Start Address for V Chrominance
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> vaddr{}; 
        namespace VaddrValC{
        }
    }
    namespace LcdcHeovctrl{    ///<High-End Overlay V DMA control Register
        using Addr = Register::Address<0xf0030384,0xffffffc2,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> vdfetch{}; 
        namespace VdfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> vdmaien{}; 
        namespace VdmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> vdscrien{}; 
        namespace VdscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> vaddien{}; 
        namespace VaddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> vdoneien{}; 
        namespace VdoneienValC{
        }
    }
    namespace LcdcHeovnext{    ///<High-End Overlay VDMA Next Register
        using Addr = Register::Address<0xf0030388,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> vnext{}; 
        namespace VnextValC{
        }
    }
    namespace LcdcHeocfg0{    ///<High-End Overlay Configuration Register 0
        using Addr = Register::Address<0xf003038c,0xffffce0e,0,unsigned>;
        ///Source Interface
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sif{}; 
        namespace SifValC{
        }
        ///AHB Burst Length
        enum class BlenVal {
            ahbBlenSingle=0x00000000,     ///<AHB Access is started as soon as there is enough space in the FIFO to store one data. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr4=0x00000001,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 4 data. An AHB INCR4 Burst is used. SINGLE, INCR and INCR4 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr8=0x00000002,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 8 data. An AHB INCR8 Burst is used. SINGLE, INCR, INCR4 and INCR8 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr16=0x00000003,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 16 data. An AHB INCR16 Burst is used. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,4),Register::ReadWriteAccess,BlenVal> blen{}; 
        namespace BlenValC{
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenSingle> ahbBlenSingle{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr4> ahbBlenIncr4{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr8> ahbBlenIncr8{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr16> ahbBlenIncr16{};
        }
        ///AHB Burst Length for U-V channel
        enum class BlenuvVal {
            ahbSingle=0x00000000,     ///<AHB Access is started as soon as there is enough space in the FIFO to store one data. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr4=0x00000001,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 4 data. An AHB INCR4 Burst is used. SINGLE, INCR and INCR4 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr8=0x00000002,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 8 data. An AHB INCR8 Burst is used. SINGLE, INCR, INCR4 and INCR8 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbIncr16=0x00000003,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 16 data. An AHB INCR16 Burst is used. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,6),Register::ReadWriteAccess,BlenuvVal> blenuv{}; 
        namespace BlenuvValC{
            constexpr Register::FieldValue<decltype(blenuv),BlenuvVal::ahbSingle> ahbSingle{};
            constexpr Register::FieldValue<decltype(blenuv),BlenuvVal::ahbIncr4> ahbIncr4{};
            constexpr Register::FieldValue<decltype(blenuv),BlenuvVal::ahbIncr8> ahbIncr8{};
            constexpr Register::FieldValue<decltype(blenuv),BlenuvVal::ahbIncr16> ahbIncr16{};
        }
        ///Defined Length Burst Only For Channel Bus Transaction.
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dlbo{}; 
        namespace DlboValC{
        }
        ///Hardware Rotation Optimization Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> rotdis{}; 
        namespace RotdisValC{
        }
        ///Hardware Rotation Lock Disable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,13),Register::ReadWriteAccess,unsigned> lockdis{}; 
        namespace LockdisValC{
        }
    }
    namespace LcdcHeocfg1{    ///<High-End Overlay Configuration Register 1
        using Addr = Register::Address<0xf0030390,0xffec0c0c,0,unsigned>;
        ///Color Lookup Table Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> cluten{}; 
        namespace ClutenValC{
        }
        ///YUV Color Space Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> yuven{}; 
        namespace YuvenValC{
        }
        ///RGB input mode selection
        enum class RgbmodeVal {
            v12bppRgb444=0x00000000,     ///<12 bpp RGB 444
            v16bppArgb4444=0x00000001,     ///<16 bpp ARGB 4444
            v16bppRgba4444=0x00000002,     ///<16 bpp RGBA 4444
            v16bppRgb565=0x00000003,     ///<16 bpp RGB 565
            v16bppTrgb1555=0x00000004,     ///<16 bpp TRGB 1555
            v18bppRgb666=0x00000005,     ///<18 bpp RGB 666
            v18bppRgb666packed=0x00000006,     ///<18 bpp RGB 666 PACKED
            v19bppTrgb1666=0x00000007,     ///<19 bpp TRGB 1666
            v19bppTrgbPacked=0x00000008,     ///<19 bpp TRGB 1666 PACKED
            v24bppRgb888=0x00000009,     ///<24 bpp RGB 888
            v24bppRgb888Packed=0x0000000a,     ///<24 bpp RGB 888 PACKED
            v25bppTrgb1888=0x0000000b,     ///<25 bpp TRGB 1888
            v32bppArgb8888=0x0000000c,     ///<32 bpp ARGB 8888
            v32bppRgba8888=0x0000000d,     ///<32 bpp RGBA 8888
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,4),Register::ReadWriteAccess,RgbmodeVal> rgbmode{}; 
        namespace RgbmodeValC{
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v12bppRgb444> v12bppRgb444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppArgb4444> v16bppArgb4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgba4444> v16bppRgba4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgb565> v16bppRgb565{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppTrgb1555> v16bppTrgb1555{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666> v18bppRgb666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666packed> v18bppRgb666packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgb1666> v19bppTrgb1666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgbPacked> v19bppTrgbPacked{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888> v24bppRgb888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888Packed> v24bppRgb888Packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v25bppTrgb1888> v25bppTrgb1888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppArgb8888> v32bppArgb8888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppRgba8888> v32bppRgba8888{};
        }
        ///Color Lookup table input mode selection
        enum class ClutmodeVal {
            clut1bpp=0x00000000,     ///<color lookup table mode set to 1 bit per pixel
            clut2bpp=0x00000001,     ///<color lookup table mode set to 2 bits per pixel
            clut4bpp=0x00000002,     ///<color lookup table mode set to 4 bits per pixel
            clut8bpp=0x00000003,     ///<color lookup table mode set to 8 bits per pixel
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,8),Register::ReadWriteAccess,ClutmodeVal> clutmode{}; 
        namespace ClutmodeValC{
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut1bpp> clut1bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut2bpp> clut2bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut4bpp> clut4bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut8bpp> clut8bpp{};
        }
        ///YUV input mode selection
        enum class YuvmodeVal {
            v32bppAycbcr=0x00000000,     ///<32 bpp AYCbCr 444
            v16bppYcbcrMode0=0x00000001,     ///<16 bpp Cr(n)Y(n+1)Cb(n)Y(n) 422
            v16bppYcbcrMode1=0x00000002,     ///<16 bpp Y(n+1)Cr(n)Y(n)Cb(n) 422
            v16bppYcbcrMode2=0x00000003,     ///<16 bpp Cb(n)Y(+1)Cr(n)Y(n) 422
            v16bppYcbcrMode3=0x00000004,     ///<16 bpp Y(n+1)Cb(n)Y(n)Cr(n) 422
            v16bppYcbcrSemiplanar=0x00000005,     ///<16 bpp Semiplanar 422 YCbCr
            v16bppYcbcrPlanar=0x00000006,     ///<16 bpp Planar 422 YCbCr
            v12bppYcbcrSemiplanar=0x00000007,     ///<12 bpp Semiplanar 420 YCbCr
            v12bppYcbcrPlanar=0x00000008,     ///<12 bpp Planar 420 YCbCr
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,12),Register::ReadWriteAccess,YuvmodeVal> yuvmode{}; 
        namespace YuvmodeValC{
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v32bppAycbcr> v32bppAycbcr{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v16bppYcbcrMode0> v16bppYcbcrMode0{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v16bppYcbcrMode1> v16bppYcbcrMode1{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v16bppYcbcrMode2> v16bppYcbcrMode2{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v16bppYcbcrMode3> v16bppYcbcrMode3{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v16bppYcbcrSemiplanar> v16bppYcbcrSemiplanar{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v16bppYcbcrPlanar> v16bppYcbcrPlanar{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v12bppYcbcrSemiplanar> v12bppYcbcrSemiplanar{};
            constexpr Register::FieldValue<decltype(yuvmode),YuvmodeVal::v12bppYcbcrPlanar> v12bppYcbcrPlanar{};
        }
        ///YUV 4:2:2 Rotation
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(16,16),Register::ReadWriteAccess,unsigned> yuv422rot{}; 
        namespace Yuv422rotValC{
        }
        ///YUV 4:2:2 SWAP
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(17,17),Register::ReadWriteAccess,unsigned> yuv422swp{}; 
        namespace Yuv422swpValC{
        }
        ///Down Scaling Bandwidth Optimization
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(20,20),Register::ReadWriteAccess,unsigned> dscaleopt{}; 
        namespace DscaleoptValC{
        }
    }
    namespace LcdcHeocfg2{    ///<High-End Overlay Configuration Register 2
        using Addr = Register::Address<0xf0030394,0xf800f800,0,unsigned>;
        ///Horizontal Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xpos{}; 
        namespace XposValC{
        }
        ///Vertical Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ypos{}; 
        namespace YposValC{
        }
    }
    namespace LcdcHeocfg3{    ///<High-End Overlay Configuration Register 3
        using Addr = Register::Address<0xf0030398,0xf800f800,0,unsigned>;
        ///Horizontal Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xsize{}; 
        namespace XsizeValC{
        }
        ///Vertical Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ysize{}; 
        namespace YsizeValC{
        }
    }
    namespace LcdcHeocfg4{    ///<High-End Overlay Configuration Register 4
        using Addr = Register::Address<0xf003039c,0xf800f800,0,unsigned>;
        ///Horizontal image Size in Memory
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xmemsize{}; 
        namespace XmemsizeValC{
        }
        ///Vertical image Size in Memory
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ymemsize{}; 
        namespace YmemsizeValC{
        }
    }
    namespace LcdcHeocfg5{    ///<High-End Overlay Configuration Register 5
        using Addr = Register::Address<0xf00303a0,0x00000000,0,unsigned>;
        ///Horizontal Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> xstride{}; 
        namespace XstrideValC{
        }
    }
    namespace LcdcHeocfg6{    ///<High-End Overlay Configuration Register 6
        using Addr = Register::Address<0xf00303a4,0x00000000,0,unsigned>;
        ///Pixel Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> pstride{}; 
        namespace PstrideValC{
        }
    }
    namespace LcdcHeocfg7{    ///<High-End Overlay Configuration Register 7
        using Addr = Register::Address<0xf00303a8,0x00000000,0,unsigned>;
        ///UV Horizontal Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> uvxstride{}; 
        namespace UvxstrideValC{
        }
    }
    namespace LcdcHeocfg8{    ///<High-End Overlay Configuration Register 8
        using Addr = Register::Address<0xf00303ac,0x00000000,0,unsigned>;
        ///UV Pixel Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> uvpstride{}; 
        namespace UvpstrideValC{
        }
    }
    namespace LcdcHeocfg9{    ///<High-End Overlay Configuration Register 9
        using Addr = Register::Address<0xf00303b0,0xff000000,0,unsigned>;
        ///Blue Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bdef{}; 
        namespace BdefValC{
        }
        ///Green Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gdef{}; 
        namespace GdefValC{
        }
        ///Red Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rdef{}; 
        namespace RdefValC{
        }
    }
    namespace LcdcHeocfg10{    ///<High-End Overlay Configuration Register 10
        using Addr = Register::Address<0xf00303b4,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bkey{}; 
        namespace BkeyValC{
        }
        ///Green Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gkey{}; 
        namespace GkeyValC{
        }
        ///Red Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rkey{}; 
        namespace RkeyValC{
        }
    }
    namespace LcdcHeocfg11{    ///<High-End Overlay Configuration Register 11
        using Addr = Register::Address<0xf00303b8,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bmask{}; 
        namespace BmaskValC{
        }
        ///Green Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gmask{}; 
        namespace GmaskValC{
        }
        ///Red Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rmask{}; 
        namespace RmaskValC{
        }
    }
    namespace LcdcHeocfg12{    ///<High-End Overlay Configuration Register 12
        using Addr = Register::Address<0xf00303bc,0xff00e800,0,unsigned>;
        ///Blender Chroma Key Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> crkey{}; 
        namespace CrkeyValC{
        }
        ///Blender Inverted Blender Output Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> inv{}; 
        namespace InvValC{
        }
        ///Blender Iterated Color Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> iter2bl{}; 
        namespace Iter2blValC{
        }
        ///Blender Use Iterated Color
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> iter{}; 
        namespace IterValC{
        }
        ///Blender Reverse Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> revalpha{}; 
        namespace RevalphaValC{
        }
        ///Blender Global Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> gaen{}; 
        namespace GaenValC{
        }
        ///Blender Local Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> laen{}; 
        namespace LaenValC{
        }
        ///Blender Overlay Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,7),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///Blender DMA Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Use Replication logic to expand RGB color to 24 bits
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> rep{}; 
        namespace RepValC{
        }
        ///Destination Chroma Keying
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> dstkey{}; 
        namespace DstkeyValC{
        }
        ///Video Priority
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(12,12),Register::ReadWriteAccess,unsigned> vidpri{}; 
        namespace VidpriValC{
        }
        ///Blender Global Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> ga{}; 
        namespace GaValC{
        }
    }
    namespace LcdcHeocfg13{    ///<High-End Overlay Configuration Register 13
        using Addr = Register::Address<0xf00303c0,0x4000c000,0,unsigned>;
        ///Horizontal Scaling Factor
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(13,0),Register::ReadWriteAccess,unsigned> xfactor{}; 
        namespace XfactorValC{
        }
        ///Vertical Scaling Factor
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(29,16),Register::ReadWriteAccess,unsigned> yfactor{}; 
        namespace YfactorValC{
        }
        ///Hardware Scaler Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,31),Register::ReadWriteAccess,unsigned> scalen{}; 
        namespace ScalenValC{
        }
    }
    namespace LcdcHeocfg14{    ///<High-End Overlay Configuration Register 14
        using Addr = Register::Address<0xf00303c4,0x80000000,0,unsigned>;
        ///Color Space Conversion Y coefficient for Red Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,0),Register::ReadWriteAccess,unsigned> cscry{}; 
        namespace CscryValC{
        }
        ///Color Space Conversion U coefficient for Red Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,10),Register::ReadWriteAccess,unsigned> cscru{}; 
        namespace CscruValC{
        }
        ///Color Space Conversion V coefficient for Red Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(29,20),Register::ReadWriteAccess,unsigned> cscrv{}; 
        namespace CscrvValC{
        }
        ///Color Space Conversion Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(30,30),Register::ReadWriteAccess,unsigned> cscyoff{}; 
        namespace CscyoffValC{
        }
    }
    namespace LcdcHeocfg15{    ///<High-End Overlay Configuration Register 15
        using Addr = Register::Address<0xf00303c8,0x80000000,0,unsigned>;
        ///Color Space Conversion Y coefficient for Green Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,0),Register::ReadWriteAccess,unsigned> cscgy{}; 
        namespace CscgyValC{
        }
        ///Color Space Conversion U coefficient for Green Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,10),Register::ReadWriteAccess,unsigned> cscgu{}; 
        namespace CscguValC{
        }
        ///Color Space Conversion V coefficient for Green Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(29,20),Register::ReadWriteAccess,unsigned> cscgv{}; 
        namespace CscgvValC{
        }
        ///Color Space Conversion Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(30,30),Register::ReadWriteAccess,unsigned> cscuoff{}; 
        namespace CscuoffValC{
        }
    }
    namespace LcdcHeocfg16{    ///<High-End Overlay Configuration Register 16
        using Addr = Register::Address<0xf00303cc,0x80000000,0,unsigned>;
        ///Color Space Conversion Y coefficient for Blue Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,0),Register::ReadWriteAccess,unsigned> cscby{}; 
        namespace CscbyValC{
        }
        ///Color Space Conversion U coefficient for Blue Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,10),Register::ReadWriteAccess,unsigned> cscbu{}; 
        namespace CscbuValC{
        }
        ///Color Space Conversion V coefficient for Blue Component 1:2:7 format
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(29,20),Register::ReadWriteAccess,unsigned> cscbv{}; 
        namespace CscbvValC{
        }
        ///Color Space Conversion Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(30,30),Register::ReadWriteAccess,unsigned> cscvoff{}; 
        namespace CscvoffValC{
        }
    }
    namespace LcdcHeocfg17{    ///<High-End Overlay Configuration Register 17
        using Addr = Register::Address<0xf00303d0,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 0 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi0coeff0{}; 
        namespace Xphi0coeff0ValC{
        }
        ///Horizontal Coefficient for phase 0 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi0coeff1{}; 
        namespace Xphi0coeff1ValC{
        }
        ///Horizontal Coefficient for phase 0 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi0coeff2{}; 
        namespace Xphi0coeff2ValC{
        }
        ///Horizontal Coefficient for phase 0 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi0coeff3{}; 
        namespace Xphi0coeff3ValC{
        }
    }
    namespace LcdcHeocfg18{    ///<High-End Overlay Configuration Register 18
        using Addr = Register::Address<0xf00303d4,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 0 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi0coeff4{}; 
        namespace Xphi0coeff4ValC{
        }
    }
    namespace LcdcHeocfg19{    ///<High-End Overlay Configuration Register 19
        using Addr = Register::Address<0xf00303d8,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 1 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi1coeff0{}; 
        namespace Xphi1coeff0ValC{
        }
        ///Horizontal Coefficient for phase 1 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi1coeff1{}; 
        namespace Xphi1coeff1ValC{
        }
        ///Horizontal Coefficient for phase 1 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi1coeff2{}; 
        namespace Xphi1coeff2ValC{
        }
        ///Horizontal Coefficient for phase 1 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi1coeff3{}; 
        namespace Xphi1coeff3ValC{
        }
    }
    namespace LcdcHeocfg20{    ///<High-End Overlay Configuration Register 20
        using Addr = Register::Address<0xf00303dc,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 1 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi1coeff4{}; 
        namespace Xphi1coeff4ValC{
        }
    }
    namespace LcdcHeocfg21{    ///<High-End Overlay Configuration Register 21
        using Addr = Register::Address<0xf00303e0,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 2 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi2coeff0{}; 
        namespace Xphi2coeff0ValC{
        }
        ///Horizontal Coefficient for phase 2 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi2coeff1{}; 
        namespace Xphi2coeff1ValC{
        }
        ///Horizontal Coefficient for phase 2 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi2coeff2{}; 
        namespace Xphi2coeff2ValC{
        }
        ///Horizontal Coefficient for phase 2 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi2coeff3{}; 
        namespace Xphi2coeff3ValC{
        }
    }
    namespace LcdcHeocfg22{    ///<High-End Overlay Configuration Register 22
        using Addr = Register::Address<0xf00303e4,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 2 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi2coeff4{}; 
        namespace Xphi2coeff4ValC{
        }
    }
    namespace LcdcHeocfg23{    ///<High-End Overlay Configuration Register 23
        using Addr = Register::Address<0xf00303e8,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 3 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi3coeff0{}; 
        namespace Xphi3coeff0ValC{
        }
        ///Horizontal Coefficient for phase 3 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi3coeff1{}; 
        namespace Xphi3coeff1ValC{
        }
        ///Horizontal Coefficient for phase 3 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi3coeff2{}; 
        namespace Xphi3coeff2ValC{
        }
        ///Horizontal Coefficient for phase 3 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi3coeff3{}; 
        namespace Xphi3coeff3ValC{
        }
    }
    namespace LcdcHeocfg24{    ///<High-End Overlay Configuration Register 24
        using Addr = Register::Address<0xf00303ec,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 3 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi3coeff4{}; 
        namespace Xphi3coeff4ValC{
        }
    }
    namespace LcdcHeocfg25{    ///<High-End Overlay Configuration Register 25
        using Addr = Register::Address<0xf00303f0,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 4 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi4coeff0{}; 
        namespace Xphi4coeff0ValC{
        }
        ///Horizontal Coefficient for phase 4 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi4coeff1{}; 
        namespace Xphi4coeff1ValC{
        }
        ///Horizontal Coefficient for phase 4 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi4coeff2{}; 
        namespace Xphi4coeff2ValC{
        }
        ///Horizontal Coefficient for phase 4 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi4coeff3{}; 
        namespace Xphi4coeff3ValC{
        }
    }
    namespace LcdcHeocfg26{    ///<High-End Overlay Configuration Register 26
        using Addr = Register::Address<0xf00303f4,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 4 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi4coeff4{}; 
        namespace Xphi4coeff4ValC{
        }
    }
    namespace LcdcHeocfg27{    ///<High-End Overlay Configuration Register 27
        using Addr = Register::Address<0xf00303f8,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 5 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi5coeff0{}; 
        namespace Xphi5coeff0ValC{
        }
        ///Horizontal Coefficient for phase 5 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi5coeff1{}; 
        namespace Xphi5coeff1ValC{
        }
        ///Horizontal Coefficient for phase 5 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi5coeff2{}; 
        namespace Xphi5coeff2ValC{
        }
        ///Horizontal Coefficient for phase 5 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi5coeff3{}; 
        namespace Xphi5coeff3ValC{
        }
    }
    namespace LcdcHeocfg28{    ///<High-End Overlay Configuration Register 28
        using Addr = Register::Address<0xf00303fc,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 5 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi5coeff4{}; 
        namespace Xphi5coeff4ValC{
        }
    }
    namespace LcdcHeocfg29{    ///<High-End Overlay Configuration Register 29
        using Addr = Register::Address<0xf0030400,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 6 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi6coeff0{}; 
        namespace Xphi6coeff0ValC{
        }
        ///Horizontal Coefficient for phase 6 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi6coeff1{}; 
        namespace Xphi6coeff1ValC{
        }
        ///Horizontal Coefficient for phase 6 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi6coeff2{}; 
        namespace Xphi6coeff2ValC{
        }
        ///Horizontal Coefficient for phase 6 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi6coeff3{}; 
        namespace Xphi6coeff3ValC{
        }
    }
    namespace LcdcHeocfg30{    ///<High-End Overlay Configuration Register 30
        using Addr = Register::Address<0xf0030404,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 6 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi6coeff4{}; 
        namespace Xphi6coeff4ValC{
        }
    }
    namespace LcdcHeocfg31{    ///<High-End Overlay Configuration Register 31
        using Addr = Register::Address<0xf0030408,0x00000000,0,unsigned>;
        ///Horizontal Coefficient for phase 7 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi7coeff0{}; 
        namespace Xphi7coeff0ValC{
        }
        ///Horizontal Coefficient for phase 7 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> xphi7coeff1{}; 
        namespace Xphi7coeff1ValC{
        }
        ///Horizontal Coefficient for phase 7 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> xphi7coeff2{}; 
        namespace Xphi7coeff2ValC{
        }
        ///Horizontal Coefficient for phase 7 tap 3
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> xphi7coeff3{}; 
        namespace Xphi7coeff3ValC{
        }
    }
    namespace LcdcHeocfg32{    ///<High-End Overlay Configuration Register 32
        using Addr = Register::Address<0xf003040c,0xffffff00,0,unsigned>;
        ///Horizontal Coefficient for phase 7 tap 4
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> xphi7coeff4{}; 
        namespace Xphi7coeff4ValC{
        }
    }
    namespace LcdcHeocfg33{    ///<High-End Overlay Configuration Register 33
        using Addr = Register::Address<0xf0030410,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 0 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi0coeff0{}; 
        namespace Yphi0coeff0ValC{
        }
        ///Vertical Coefficient for phase 0 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi0coeff1{}; 
        namespace Yphi0coeff1ValC{
        }
        ///Vertical Coefficient for phase 0 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi0coeff2{}; 
        namespace Yphi0coeff2ValC{
        }
    }
    namespace LcdcHeocfg34{    ///<High-End Overlay Configuration Register 34
        using Addr = Register::Address<0xf0030414,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 1 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi1coeff0{}; 
        namespace Yphi1coeff0ValC{
        }
        ///Vertical Coefficient for phase 1 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi1coeff1{}; 
        namespace Yphi1coeff1ValC{
        }
        ///Vertical Coefficient for phase 1 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi1coeff2{}; 
        namespace Yphi1coeff2ValC{
        }
    }
    namespace LcdcHeocfg35{    ///<High-End Overlay Configuration Register 35
        using Addr = Register::Address<0xf0030418,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 2 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi2coeff0{}; 
        namespace Yphi2coeff0ValC{
        }
        ///Vertical Coefficient for phase 2 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi2coeff1{}; 
        namespace Yphi2coeff1ValC{
        }
        ///Vertical Coefficient for phase 2 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi2coeff2{}; 
        namespace Yphi2coeff2ValC{
        }
    }
    namespace LcdcHeocfg36{    ///<High-End Overlay Configuration Register 36
        using Addr = Register::Address<0xf003041c,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 3 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi3coeff0{}; 
        namespace Yphi3coeff0ValC{
        }
        ///Vertical Coefficient for phase 3 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi3coeff1{}; 
        namespace Yphi3coeff1ValC{
        }
        ///Vertical Coefficient for phase 3 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi3coeff2{}; 
        namespace Yphi3coeff2ValC{
        }
    }
    namespace LcdcHeocfg37{    ///<High-End Overlay Configuration Register 37
        using Addr = Register::Address<0xf0030420,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 4 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi4coeff0{}; 
        namespace Yphi4coeff0ValC{
        }
        ///Vertical Coefficient for phase 4 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi4coeff1{}; 
        namespace Yphi4coeff1ValC{
        }
        ///Vertical Coefficient for phase 4 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi4coeff2{}; 
        namespace Yphi4coeff2ValC{
        }
    }
    namespace LcdcHeocfg38{    ///<High-End Overlay Configuration Register 38
        using Addr = Register::Address<0xf0030424,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 5 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi5coeff0{}; 
        namespace Yphi5coeff0ValC{
        }
        ///Vertical Coefficient for phase 5 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi5coeff1{}; 
        namespace Yphi5coeff1ValC{
        }
        ///Vertical Coefficient for phase 5 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi5coeff2{}; 
        namespace Yphi5coeff2ValC{
        }
    }
    namespace LcdcHeocfg39{    ///<High-End Overlay Configuration Register 39
        using Addr = Register::Address<0xf0030428,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 6 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi6coeff0{}; 
        namespace Yphi6coeff0ValC{
        }
        ///Vertical Coefficient for phase 6 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi6coeff1{}; 
        namespace Yphi6coeff1ValC{
        }
        ///Vertical Coefficient for phase 6 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi6coeff2{}; 
        namespace Yphi6coeff2ValC{
        }
    }
    namespace LcdcHeocfg40{    ///<High-End Overlay Configuration Register 40
        using Addr = Register::Address<0xf003042c,0xff000000,0,unsigned>;
        ///Vertical Coefficient for phase 7 tap 0
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> yphi7coeff0{}; 
        namespace Yphi7coeff0ValC{
        }
        ///Vertical Coefficient for phase 7 tap 1
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> yphi7coeff1{}; 
        namespace Yphi7coeff1ValC{
        }
        ///Vertical Coefficient for phase 7 tap 2
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> yphi7coeff2{}; 
        namespace Yphi7coeff2ValC{
        }
    }
    namespace LcdcHeocfg41{    ///<High-End Overlay Configuration Register 41
        using Addr = Register::Address<0xf0030430,0xfff8fff8,0,unsigned>;
        ///Horizontal Filter Phase Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,0),Register::ReadWriteAccess,unsigned> xphidef{}; 
        namespace XphidefValC{
        }
        ///Vertical Filter Phase Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(18,16),Register::ReadWriteAccess,unsigned> yphidef{}; 
        namespace YphidefValC{
        }
    }
    namespace LcdcHcrcher{    ///<Hardware Cursor Channel Enable Register
        using Addr = Register::Address<0xf0030440,0xfffffff8,0,unsigned>;
        ///Channel Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chen{}; 
        namespace ChenValC{
        }
        ///Update Overlay Attributes Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updateen{}; 
        namespace UpdateenValC{
        }
        ///Add Head Pointer Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qen{}; 
        namespace A2qenValC{
        }
    }
    namespace LcdcHcrchdr{    ///<Hardware Cursor Channel disable Register
        using Addr = Register::Address<0xf0030444,0xfffffefe,0,unsigned>;
        ///Channel Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chdis{}; 
        namespace ChdisValC{
        }
        ///Channel Reset Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> chrst{}; 
        namespace ChrstValC{
        }
    }
    namespace LcdcHcrchsr{    ///<Hardware Cursor Channel Status Register
        using Addr = Register::Address<0xf0030448,0xfffffff8,0,unsigned>;
        ///Channel Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chsr{}; 
        namespace ChsrValC{
        }
        ///Update Overlay Attributes In Progress
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updatesr{}; 
        namespace UpdatesrValC{
        }
        ///Add To Queue Pending Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qsr{}; 
        namespace A2qsrValC{
        }
    }
    namespace LcdcHcrier{    ///<Hardware Cursor Interrupt Enable Register
        using Addr = Register::Address<0xf003044c,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcHcridr{    ///<Hardware Cursor Interrupt Disable Register
        using Addr = Register::Address<0xf0030450,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcHcrimr{    ///<Hardware Cursor Interrupt Mask Register
        using Addr = Register::Address<0xf0030454,0xffffff83,0,unsigned>;
        ///End of DMA Transfer Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcHcrisr{    ///<Hardware Cursor Interrupt Status Register
        using Addr = Register::Address<0xf0030458,0xffffff83,0,unsigned>;
        ///End of DMA Transfer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///DMA Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
        ///Overflow Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
    }
    namespace LcdcHcrhead{    ///<Hardware Cursor DMA Head Register
        using Addr = Register::Address<0xf003045c,0x00000003,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,2),Register::ReadWriteAccess,unsigned> head{}; 
        namespace HeadValC{
        }
    }
    namespace LcdcHcraddr{    ///<Hardware cursor DMA Address Register
        using Addr = Register::Address<0xf0030460,0x00000000,0,unsigned>;
        ///DMA Transfer start address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> addr{}; 
        namespace AddrValC{
        }
    }
    namespace LcdcHcrctrl{    ///<Hardware Cursor DMA Control Register
        using Addr = Register::Address<0xf0030464,0xffffffc0,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> dfetch{}; 
        namespace DfetchValC{
        }
        ///Lookup Table Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> lfetch{}; 
        namespace LfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dmaien{}; 
        namespace DmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscrien{}; 
        namespace DscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> addien{}; 
        namespace AddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> doneien{}; 
        namespace DoneienValC{
        }
    }
    namespace LcdcHcrnext{    ///<Hardware Cursor DMA NExt Register
        using Addr = Register::Address<0xf0030468,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> next{}; 
        namespace NextValC{
        }
    }
    namespace LcdcHcrcfg0{    ///<Hardware Cursor Configuration 0 Register
        using Addr = Register::Address<0xf003046c,0xfffffece,0,unsigned>;
        ///Source Interface
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sif{}; 
        namespace SifValC{
        }
        ///AHB Burst Length
        enum class BlenVal {
            ahbBlenSingle=0x00000000,     ///<AHB Access is started as soon as there is enough space in the FIFO to store one data. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr4=0x00000001,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 4 data. An AHB INCR4 Burst is used. SINGLE, INCR and INCR4 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr8=0x00000002,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 8 data. An AHB INCR8 Burst is used. SINGLE, INCR, INCR4 and INCR8 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr16=0x00000003,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 16 data. An AHB INCR16 Burst is used. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,4),Register::ReadWriteAccess,BlenVal> blen{}; 
        namespace BlenValC{
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenSingle> ahbBlenSingle{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr4> ahbBlenIncr4{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr8> ahbBlenIncr8{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr16> ahbBlenIncr16{};
        }
        ///Defined Length Burst Only for Channel Bus Transaction.
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dlbo{}; 
        namespace DlboValC{
        }
    }
    namespace LcdcHcrcfg1{    ///<Hardware Cursor Configuration 1 Register
        using Addr = Register::Address<0xf0030470,0xfffffc0e,0,unsigned>;
        ///Color Lookup Table Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> cluten{}; 
        namespace ClutenValC{
        }
        ///RGB input mode selection
        enum class RgbmodeVal {
            v12bppRgb444=0x00000000,     ///<12 bpp RGB 444
            v16bppArgb4444=0x00000001,     ///<16 bpp ARGB 4444
            v16bppRgba4444=0x00000002,     ///<16 bpp RGBA 4444
            v16bppRgb565=0x00000003,     ///<16 bpp RGB 565
            v16bppTrgb1555=0x00000004,     ///<16 bpp TRGB 1555
            v18bppRgb666=0x00000005,     ///<18 bpp RGB 666
            v18bppRgb666packed=0x00000006,     ///<18 bpp RGB 666 PACKED
            v19bppTrgb1666=0x00000007,     ///<19 bpp TRGB 1666
            v19bppTrgbPacked=0x00000008,     ///<19 bpp TRGB 1666 PACKED
            v24bppRgb888=0x00000009,     ///<24 bpp RGB 888
            v24bppRgb888Packed=0x0000000a,     ///<24 bpp RGB 888 PACKED
            v25bppTrgb1888=0x0000000b,     ///<25 bpp TRGB 1888
            v32bppArgb8888=0x0000000c,     ///<32 bpp ARGB 8888
            v32bppRgba8888=0x0000000d,     ///<32 bpp RGBA 8888
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,4),Register::ReadWriteAccess,RgbmodeVal> rgbmode{}; 
        namespace RgbmodeValC{
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v12bppRgb444> v12bppRgb444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppArgb4444> v16bppArgb4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgba4444> v16bppRgba4444{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppRgb565> v16bppRgb565{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v16bppTrgb1555> v16bppTrgb1555{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666> v18bppRgb666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v18bppRgb666packed> v18bppRgb666packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgb1666> v19bppTrgb1666{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v19bppTrgbPacked> v19bppTrgbPacked{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888> v24bppRgb888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v24bppRgb888Packed> v24bppRgb888Packed{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v25bppTrgb1888> v25bppTrgb1888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppArgb8888> v32bppArgb8888{};
            constexpr Register::FieldValue<decltype(rgbmode),RgbmodeVal::v32bppRgba8888> v32bppRgba8888{};
        }
        ///Color Lookup table input mode selection
        enum class ClutmodeVal {
            clut1bpp=0x00000000,     ///<color lookup table mode set to 1 bit per pixel
            clut2bpp=0x00000001,     ///<color lookup table mode set to 2 bits per pixel
            clut4bpp=0x00000002,     ///<color lookup table mode set to 4 bits per pixel
            clut8bpp=0x00000003,     ///<color lookup table mode set to 8 bits per pixel
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,8),Register::ReadWriteAccess,ClutmodeVal> clutmode{}; 
        namespace ClutmodeValC{
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut1bpp> clut1bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut2bpp> clut2bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut4bpp> clut4bpp{};
            constexpr Register::FieldValue<decltype(clutmode),ClutmodeVal::clut8bpp> clut8bpp{};
        }
    }
    namespace LcdcHcrcfg2{    ///<Hardware Cursor Configuration 2 Register
        using Addr = Register::Address<0xf0030474,0xf800f800,0,unsigned>;
        ///Horizontal Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xpos{}; 
        namespace XposValC{
        }
        ///Vertical Window Position
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ypos{}; 
        namespace YposValC{
        }
    }
    namespace LcdcHcrcfg3{    ///<Hardware Cursor Configuration 3 Register
        using Addr = Register::Address<0xf0030478,0xf800f800,0,unsigned>;
        ///Horizontal Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,0),Register::ReadWriteAccess,unsigned> xsize{}; 
        namespace XsizeValC{
        }
        ///Vertical Window Size
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(26,16),Register::ReadWriteAccess,unsigned> ysize{}; 
        namespace YsizeValC{
        }
    }
    namespace LcdcHcrcfg4{    ///<Hardware Cursor Configuration 4 Register
        using Addr = Register::Address<0xf003047c,0x00000000,0,unsigned>;
        ///Horizontal Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> xstride{}; 
        namespace XstrideValC{
        }
    }
    namespace LcdcHcrcfg6{    ///<Hardware Cursor Configuration 6 Register
        using Addr = Register::Address<0xf0030484,0xff000000,0,unsigned>;
        ///Blue Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bdef{}; 
        namespace BdefValC{
        }
        ///Green Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gdef{}; 
        namespace GdefValC{
        }
        ///Red Default
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rdef{}; 
        namespace RdefValC{
        }
    }
    namespace LcdcHcrcfg7{    ///<Hardware Cursor Configuration 7 Register
        using Addr = Register::Address<0xf0030488,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bkey{}; 
        namespace BkeyValC{
        }
        ///Green Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gkey{}; 
        namespace GkeyValC{
        }
        ///Red Color Component Chroma Key
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rkey{}; 
        namespace RkeyValC{
        }
    }
    namespace LcdcHcrcfg8{    ///<Hardware Cursor Configuration 8 Register
        using Addr = Register::Address<0xf003048c,0xff000000,0,unsigned>;
        ///Blue Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bmask{}; 
        namespace BmaskValC{
        }
        ///Green Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gmask{}; 
        namespace GmaskValC{
        }
        ///Red Color Component Chroma Key Mask
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rmask{}; 
        namespace RmaskValC{
        }
    }
    namespace LcdcHcrcfg9{    ///<Hardware Cursor Configuration 9 Register
        using Addr = Register::Address<0xf0030490,0xff00f800,0,unsigned>;
        ///Blender Chroma Key Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> crkey{}; 
        namespace CrkeyValC{
        }
        ///Blender Inverted Blender Output Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> inv{}; 
        namespace InvValC{
        }
        ///Blender Iterated Color Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> iter2bl{}; 
        namespace Iter2blValC{
        }
        ///Blender Use Iterated Color
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> iter{}; 
        namespace IterValC{
        }
        ///Blender Reverse Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> revalpha{}; 
        namespace RevalphaValC{
        }
        ///Blender Global Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> gaen{}; 
        namespace GaenValC{
        }
        ///Blender Local Alpha Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(6,6),Register::ReadWriteAccess,unsigned> laen{}; 
        namespace LaenValC{
        }
        ///Blender Overlay Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,7),Register::ReadWriteAccess,unsigned> ovr{}; 
        namespace OvrValC{
        }
        ///Blender DMA Layer Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Use Replication logic to expand RGB color to 24 bits
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,9),Register::ReadWriteAccess,unsigned> rep{}; 
        namespace RepValC{
        }
        ///Destination Chroma Keying
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(10,10),Register::ReadWriteAccess,unsigned> dstkey{}; 
        namespace DstkeyValC{
        }
        ///Blender Global Alpha
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> ga{}; 
        namespace GaValC{
        }
    }
    namespace LcdcPpcher{    ///<Post Processing Channel Enable Register
        using Addr = Register::Address<0xf0030540,0xfffffff8,0,unsigned>;
        ///Channel Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chen{}; 
        namespace ChenValC{
        }
        ///Update Overlay Attributes Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updateen{}; 
        namespace UpdateenValC{
        }
        ///Add Head Pointer Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qen{}; 
        namespace A2qenValC{
        }
    }
    namespace LcdcPpchdr{    ///<Post Processing Channel Disable Register
        using Addr = Register::Address<0xf0030544,0xfffffefe,0,unsigned>;
        ///Channel Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chdis{}; 
        namespace ChdisValC{
        }
        ///Channel Reset Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> chrst{}; 
        namespace ChrstValC{
        }
    }
    namespace LcdcPpchsr{    ///<Post Processing Channel Status Register
        using Addr = Register::Address<0xf0030548,0xfffffff8,0,unsigned>;
        ///Channel Status Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> chsr{}; 
        namespace ChsrValC{
        }
        ///Update Overlay Attributes In Progress
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(1,1),Register::ReadWriteAccess,unsigned> updatesr{}; 
        namespace UpdatesrValC{
        }
        ///Add To Queue Pending Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> a2qsr{}; 
        namespace A2qsrValC{
        }
    }
    namespace LcdcPpier{    ///<Post Processing Interrupt Enable Register
        using Addr = Register::Address<0xf003054c,0xffffffc3,0,unsigned>;
        ///End of DMA Transfer Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Enable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
    }
    namespace LcdcPpidr{    ///<Post Processing Interrupt Disable Register
        using Addr = Register::Address<0xf0030550,0xffffffc3,0,unsigned>;
        ///End of DMA Transfer Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Disable Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
    }
    namespace LcdcPpimr{    ///<Post Processing Interrupt Mask Register
        using Addr = Register::Address<0xf0030554,0xffffffc3,0,unsigned>;
        ///End of DMA Transfer Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End of List Interrupt Mask Register
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
    }
    namespace LcdcPpisr{    ///<Post Processing Interrupt Status Register
        using Addr = Register::Address<0xf0030558,0xffffffc3,0,unsigned>;
        ///End of DMA Transfer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dma{}; 
        namespace DmaValC{
        }
        ///DMA Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscr{}; 
        namespace DscrValC{
        }
        ///Head Descriptor Loaded
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> add{}; 
        namespace AddValC{
        }
        ///End Of List Detected
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> done{}; 
        namespace DoneValC{
        }
    }
    namespace LcdcPphead{    ///<Post Processing Head Register
        using Addr = Register::Address<0xf003055c,0x00000003,0,unsigned>;
        ///DMA Head Pointer
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,2),Register::ReadWriteAccess,unsigned> head{}; 
        namespace HeadValC{
        }
    }
    namespace LcdcPpaddr{    ///<Post Processing Address Register
        using Addr = Register::Address<0xf0030560,0x00000000,0,unsigned>;
        ///DMA Transfer start address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> addr{}; 
        namespace AddrValC{
        }
    }
    namespace LcdcPpctrl{    ///<Post Processing Control Register
        using Addr = Register::Address<0xf0030564,0xffffffc2,0,unsigned>;
        ///Transfer Descriptor Fetch Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> dfetch{}; 
        namespace DfetchValC{
        }
        ///End of DMA Transfer Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,2),Register::ReadWriteAccess,unsigned> dmaien{}; 
        namespace DmaienValC{
        }
        ///Descriptor Loaded Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(3,3),Register::ReadWriteAccess,unsigned> dscrien{}; 
        namespace DscrienValC{
        }
        ///Add Head Descriptor to Queue Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> addien{}; 
        namespace AddienValC{
        }
        ///End of List Interrupt Enable
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,5),Register::ReadWriteAccess,unsigned> doneien{}; 
        namespace DoneienValC{
        }
    }
    namespace LcdcPpnext{    ///<Post Processing Next Register
        using Addr = Register::Address<0xf0030568,0x00000000,0,unsigned>;
        ///DMA Descriptor Next Address
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> next{}; 
        namespace NextValC{
        }
    }
    namespace LcdcPpcfg0{    ///<Post Processing Configuration Register 0
        using Addr = Register::Address<0xf003056c,0xfffffece,0,unsigned>;
        ///Source Interface
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(0,0),Register::ReadWriteAccess,unsigned> sif{}; 
        namespace SifValC{
        }
        ///AHB Burst Length
        enum class BlenVal {
            ahbBlenSingle=0x00000000,     ///<AHB Access is started as soon as there is enough space in the FIFO to store one data. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr4=0x00000001,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 4 data. An AHB INCR4 Burst is used. SINGLE, INCR and INCR4 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr8=0x00000002,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 8 data. An AHB INCR8 Burst is used. SINGLE, INCR, INCR4 and INCR8 bursts are used. INCR is used for a burst of 2 and 3 beats.
            ahbBlenIncr16=0x00000003,     ///<AHB Access is started as soon as there is enough space in the FIFO to store a total amount of 16 data. An AHB INCR16 Burst is used. SINGLE, INCR, INCR4, INCR8 and INCR16 bursts are used. INCR is used for a burst of 2 and 3 beats.
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(5,4),Register::ReadWriteAccess,BlenVal> blen{}; 
        namespace BlenValC{
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenSingle> ahbBlenSingle{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr4> ahbBlenIncr4{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr8> ahbBlenIncr8{};
            constexpr Register::FieldValue<decltype(blen),BlenVal::ahbBlenIncr16> ahbBlenIncr16{};
        }
        ///Defined Length Burst Only For Channel Bus Transaction.
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(8,8),Register::ReadWriteAccess,unsigned> dlbo{}; 
        namespace DlboValC{
        }
    }
    namespace LcdcPpcfg1{    ///<Post Processing Configuration Register 1
        using Addr = Register::Address<0xf0030570,0xffffffe8,0,unsigned>;
        ///Post Processing Output Format selection
        enum class PpmodeVal {
            ppmodeRgb16bpp=0x00000000,     ///<RGB 16 bpp
            ppmodeRgb24bppPacked=0x00000001,     ///<RGB 24 bpp PACKED
            ppmodeRgb24bppUnpacked=0x00000002,     ///<RGB 24 bpp UNPACKED
            ppmodeYcbcr422Mode0=0x00000003,     ///<YCbCr 422 16 bpp (Mode 0)
            ppmodeYcbcr422Mode1=0x00000004,     ///<YCbCr 422 16 bpp (Mode 1)
            ppmodeYcbcr422Mode2=0x00000005,     ///<YCbCr 422 16 bpp (Mode 2)
            ppmodeYcbcr422Mode3=0x00000006,     ///<YCbCr 422 16 bpp (Mode 3)
        };
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(2,0),Register::ReadWriteAccess,PpmodeVal> ppmode{}; 
        namespace PpmodeValC{
            constexpr Register::FieldValue<decltype(ppmode),PpmodeVal::ppmodeRgb16bpp> ppmodeRgb16bpp{};
            constexpr Register::FieldValue<decltype(ppmode),PpmodeVal::ppmodeRgb24bppPacked> ppmodeRgb24bppPacked{};
            constexpr Register::FieldValue<decltype(ppmode),PpmodeVal::ppmodeRgb24bppUnpacked> ppmodeRgb24bppUnpacked{};
            constexpr Register::FieldValue<decltype(ppmode),PpmodeVal::ppmodeYcbcr422Mode0> ppmodeYcbcr422Mode0{};
            constexpr Register::FieldValue<decltype(ppmode),PpmodeVal::ppmodeYcbcr422Mode1> ppmodeYcbcr422Mode1{};
            constexpr Register::FieldValue<decltype(ppmode),PpmodeVal::ppmodeYcbcr422Mode2> ppmodeYcbcr422Mode2{};
            constexpr Register::FieldValue<decltype(ppmode),PpmodeVal::ppmodeYcbcr422Mode3> ppmodeYcbcr422Mode3{};
        }
        ///Color Space Conversion Luminance
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(4,4),Register::ReadWriteAccess,unsigned> itubt601{}; 
        namespace Itubt601ValC{
        }
    }
    namespace LcdcPpcfg2{    ///<Post Processing Configuration Register 2
        using Addr = Register::Address<0xf0030574,0x00000000,0,unsigned>;
        ///Horizontal Stride
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,0),Register::ReadWriteAccess,unsigned> xstride{}; 
        namespace XstrideValC{
        }
    }
    namespace LcdcPpcfg3{    ///<Post Processing Configuration Register 3
        using Addr = Register::Address<0xf0030578,0x80000000,0,unsigned>;
        ///Color Space Conversion R coefficient for Luminance component, signed format, step set to 1/1024
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,0),Register::ReadWriteAccess,unsigned> cscyr{}; 
        namespace CscyrValC{
        }
        ///Color Space Conversion G coefficient for Luminance component, signed format, step set to 1/512
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,10),Register::ReadWriteAccess,unsigned> cscyg{}; 
        namespace CscygValC{
        }
        ///Color Space Conversion B coefficient for Luminance component, signed format, step set to 1/1024
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(29,20),Register::ReadWriteAccess,unsigned> cscyb{}; 
        namespace CscybValC{
        }
        ///Color Space Conversion Luminance Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(30,30),Register::ReadWriteAccess,unsigned> cscyoff{}; 
        namespace CscyoffValC{
        }
    }
    namespace LcdcPpcfg4{    ///<Post Processing Configuration Register 4
        using Addr = Register::Address<0xf003057c,0x80000000,0,unsigned>;
        ///Color Space Conversion R coefficient for Chrominance B component, signed format. (step 1/1024)
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,0),Register::ReadWriteAccess,unsigned> cscur{}; 
        namespace CscurValC{
        }
        ///Color Space Conversion G coefficient for Chrominance B component, signed format. (step 1/512)
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,10),Register::ReadWriteAccess,unsigned> cscug{}; 
        namespace CscugValC{
        }
        ///Color Space Conversion B coefficient for Chrominance B component, signed format. (step 1/512)
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(29,20),Register::ReadWriteAccess,unsigned> cscub{}; 
        namespace CscubValC{
        }
        ///Color Space Conversion Chrominance B Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(30,30),Register::ReadWriteAccess,unsigned> cscuoff{}; 
        namespace CscuoffValC{
        }
    }
    namespace LcdcPpcfg5{    ///<Post Processing Configuration Register 5
        using Addr = Register::Address<0xf0030580,0x80000000,0,unsigned>;
        ///Color Space Conversion R coefficient for Chrominance R component, signed format. (step 1/1024)
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(9,0),Register::ReadWriteAccess,unsigned> cscvr{}; 
        namespace CscvrValC{
        }
        ///Color Space Conversion G coefficient for Chrominance R component, signed format. (step 1/512)
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(19,10),Register::ReadWriteAccess,unsigned> cscvg{}; 
        namespace CscvgValC{
        }
        ///Color Space Conversion B coefficient for Chrominance R component, signed format. (step 1/1024)
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(29,20),Register::ReadWriteAccess,unsigned> cscvb{}; 
        namespace CscvbValC{
        }
        ///Color Space Conversion Chrominance R Offset
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(30,30),Register::ReadWriteAccess,unsigned> cscvoff{}; 
        namespace CscvoffValC{
        }
    }
    namespace LcdcBaseclut0{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030600,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut1{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030604,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut2{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030608,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut3{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003060c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut4{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030610,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut5{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030614,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut6{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030618,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut7{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003061c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut8{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030620,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut9{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030624,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut10{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030628,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut11{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003062c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut12{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030630,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut13{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030634,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut14{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030638,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut15{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003063c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut16{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030640,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut17{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030644,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut18{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030648,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut19{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003064c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut20{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030650,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut21{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030654,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut22{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030658,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut23{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003065c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut24{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030660,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut25{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030664,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut26{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030668,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut27{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003066c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut28{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030670,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut29{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030674,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut30{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030678,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut31{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003067c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut32{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030680,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut33{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030684,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut34{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030688,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut35{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003068c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut36{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030690,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut37{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030694,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut38{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030698,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut39{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003069c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut40{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306a0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut41{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306a4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut42{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306a8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut43{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306ac,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut44{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306b0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut45{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306b4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut46{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306b8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut47{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306bc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut48{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306c0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut49{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306c4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut50{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306c8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut51{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306cc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut52{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306d0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut53{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306d4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut54{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306d8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut55{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306dc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut56{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306e0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut57{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306e4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut58{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306e8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut59{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306ec,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut60{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306f0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut61{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306f4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut62{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306f8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut63{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00306fc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut64{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030700,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut65{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030704,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut66{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030708,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut67{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003070c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut68{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030710,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut69{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030714,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut70{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030718,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut71{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003071c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut72{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030720,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut73{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030724,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut74{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030728,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut75{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003072c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut76{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030730,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut77{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030734,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut78{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030738,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut79{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003073c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut80{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030740,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut81{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030744,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut82{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030748,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut83{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003074c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut84{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030750,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut85{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030754,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut86{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030758,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut87{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003075c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut88{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030760,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut89{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030764,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut90{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030768,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut91{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003076c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut92{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030770,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut93{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030774,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut94{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030778,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut95{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003077c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut96{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030780,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut97{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030784,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut98{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030788,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut99{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003078c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut100{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030790,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut101{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030794,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut102{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030798,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut103{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003079c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut104{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307a0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut105{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307a4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut106{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307a8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut107{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307ac,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut108{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307b0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut109{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307b4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut110{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307b8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut111{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307bc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut112{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307c0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut113{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307c4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut114{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307c8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut115{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307cc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut116{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307d0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut117{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307d4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut118{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307d8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut119{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307dc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut120{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307e0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut121{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307e4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut122{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307e8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut123{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307ec,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut124{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307f0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut125{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307f4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut126{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307f8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut127{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00307fc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut128{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030800,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut129{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030804,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut130{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030808,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut131{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003080c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut132{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030810,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut133{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030814,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut134{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030818,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut135{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003081c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut136{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030820,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut137{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030824,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut138{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030828,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut139{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003082c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut140{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030830,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut141{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030834,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut142{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030838,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut143{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003083c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut144{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030840,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut145{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030844,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut146{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030848,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut147{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003084c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut148{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030850,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut149{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030854,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut150{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030858,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut151{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003085c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut152{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030860,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut153{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030864,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut154{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030868,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut155{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003086c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut156{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030870,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut157{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030874,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut158{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030878,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut159{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003087c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut160{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030880,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut161{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030884,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut162{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030888,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut163{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003088c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut164{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030890,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut165{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030894,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut166{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030898,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut167{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003089c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut168{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308a0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut169{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308a4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut170{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308a8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut171{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308ac,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut172{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308b0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut173{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308b4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut174{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308b8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut175{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308bc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut176{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308c0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut177{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308c4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut178{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308c8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut179{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308cc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut180{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308d0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut181{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308d4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut182{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308d8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut183{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308dc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut184{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308e0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut185{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308e4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut186{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308e8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut187{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308ec,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut188{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308f0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut189{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308f4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut190{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308f8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut191{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00308fc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut192{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030900,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut193{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030904,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut194{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030908,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut195{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003090c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut196{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030910,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut197{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030914,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut198{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030918,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut199{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003091c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut200{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030920,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut201{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030924,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut202{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030928,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut203{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003092c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut204{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030930,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut205{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030934,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut206{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030938,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut207{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003093c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut208{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030940,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut209{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030944,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut210{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030948,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut211{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003094c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut212{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030950,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut213{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030954,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut214{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030958,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut215{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003095c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut216{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030960,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut217{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030964,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut218{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030968,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut219{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003096c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut220{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030970,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut221{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030974,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut222{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030978,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut223{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003097c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut224{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030980,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut225{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030984,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut226{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030988,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut227{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003098c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut228{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030990,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut229{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030994,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut230{    ///<Base CLUT Register
        using Addr = Register::Address<0xf0030998,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut231{    ///<Base CLUT Register
        using Addr = Register::Address<0xf003099c,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut232{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309a0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut233{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309a4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut234{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309a8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut235{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309ac,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut236{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309b0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut237{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309b4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut238{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309b8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut239{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309bc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut240{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309c0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut241{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309c4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut242{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309c8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut243{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309cc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut244{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309d0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut245{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309d4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut246{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309d8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut247{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309dc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut248{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309e0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut249{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309e4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut250{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309e8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut251{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309ec,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut252{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309f0,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut253{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309f4,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut254{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309f8,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcBaseclut255{    ///<Base CLUT Register
        using Addr = Register::Address<0xf00309fc,0xff000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
    }
    namespace LcdcOvr1clut0{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a00,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut1{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a04,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut2{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a08,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut3{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a0c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut4{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a10,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut5{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a14,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut6{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a18,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut7{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a1c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut8{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a20,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut9{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a24,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut10{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a28,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut11{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a2c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut12{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a30,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut13{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a34,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut14{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a38,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut15{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a3c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut16{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a40,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut17{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a44,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut18{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a48,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut19{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a4c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut20{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a50,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut21{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a54,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut22{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a58,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut23{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a5c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut24{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a60,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut25{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a64,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut26{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a68,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut27{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a6c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut28{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a70,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut29{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a74,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut30{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a78,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut31{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a7c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut32{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a80,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut33{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a84,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut34{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a88,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut35{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a8c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut36{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a90,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut37{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a94,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut38{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a98,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut39{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030a9c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut40{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030aa0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut41{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030aa4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut42{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030aa8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut43{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030aac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut44{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ab0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut45{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ab4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut46{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ab8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut47{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030abc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut48{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ac0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut49{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ac4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut50{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ac8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut51{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030acc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut52{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ad0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut53{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ad4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut54{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ad8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut55{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030adc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut56{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ae0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut57{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ae4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut58{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ae8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut59{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030aec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut60{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030af0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut61{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030af4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut62{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030af8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut63{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030afc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut64{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b00,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut65{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b04,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut66{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b08,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut67{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b0c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut68{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b10,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut69{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b14,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut70{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b18,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut71{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b1c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut72{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b20,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut73{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b24,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut74{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b28,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut75{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b2c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut76{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b30,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut77{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b34,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut78{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b38,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut79{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b3c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut80{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b40,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut81{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b44,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut82{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b48,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut83{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b4c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut84{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b50,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut85{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b54,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut86{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b58,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut87{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b5c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut88{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b60,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut89{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b64,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut90{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b68,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut91{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b6c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut92{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b70,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut93{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b74,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut94{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b78,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut95{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b7c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut96{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b80,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut97{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b84,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut98{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b88,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut99{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b8c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut100{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b90,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut101{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b94,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut102{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b98,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut103{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030b9c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut104{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ba0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut105{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ba4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut106{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ba8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut107{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut108{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bb0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut109{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bb4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut110{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bb8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut111{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bbc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut112{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bc0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut113{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bc4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut114{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bc8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut115{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bcc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut116{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bd0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut117{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bd4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut118{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bd8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut119{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bdc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut120{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030be0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut121{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030be4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut122{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030be8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut123{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut124{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bf0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut125{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bf4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut126{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bf8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut127{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030bfc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut128{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c00,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut129{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c04,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut130{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c08,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut131{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c0c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut132{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c10,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut133{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c14,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut134{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c18,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut135{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c1c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut136{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c20,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut137{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c24,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut138{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c28,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut139{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c2c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut140{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c30,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut141{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c34,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut142{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c38,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut143{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c3c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut144{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c40,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut145{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c44,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut146{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c48,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut147{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c4c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut148{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c50,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut149{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c54,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut150{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c58,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut151{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c5c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut152{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c60,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut153{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c64,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut154{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c68,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut155{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c6c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut156{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c70,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut157{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c74,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut158{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c78,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut159{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c7c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut160{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c80,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut161{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c84,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut162{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c88,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut163{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c8c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut164{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c90,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut165{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c94,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut166{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c98,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut167{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030c9c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut168{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ca0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut169{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ca4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut170{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ca8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut171{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut172{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cb0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut173{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cb4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut174{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cb8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut175{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cbc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut176{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cc0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut177{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cc4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut178{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cc8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut179{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ccc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut180{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cd0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut181{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cd4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut182{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cd8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut183{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cdc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut184{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ce0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut185{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ce4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut186{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ce8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut187{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut188{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cf0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut189{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cf4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut190{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cf8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut191{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030cfc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut192{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d00,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut193{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d04,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut194{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d08,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut195{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d0c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut196{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d10,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut197{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d14,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut198{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d18,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut199{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d1c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut200{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d20,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut201{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d24,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut202{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d28,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut203{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d2c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut204{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d30,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut205{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d34,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut206{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d38,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut207{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d3c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut208{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d40,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut209{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d44,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut210{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d48,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut211{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d4c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut212{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d50,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut213{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d54,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut214{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d58,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut215{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d5c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut216{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d60,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut217{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d64,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut218{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d68,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut219{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d6c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut220{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d70,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut221{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d74,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut222{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d78,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut223{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d7c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut224{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d80,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut225{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d84,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut226{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d88,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut227{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d8c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut228{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d90,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut229{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d94,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut230{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d98,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut231{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030d9c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut232{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030da0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut233{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030da4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut234{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030da8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut235{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut236{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030db0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut237{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030db4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut238{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030db8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut239{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dbc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut240{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dc0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut241{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dc4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut242{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dc8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut243{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dcc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut244{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dd0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut245{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dd4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut246{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dd8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut247{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030ddc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut248{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030de0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut249{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030de4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut250{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030de8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut251{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut252{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030df0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut253{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030df4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut254{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030df8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr1clut255{    ///<Overlay 1 CLUT Register
        using Addr = Register::Address<0xf0030dfc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut0{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e00,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut1{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e04,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut2{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e08,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut3{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e0c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut4{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e10,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut5{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e14,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut6{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e18,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut7{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e1c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut8{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e20,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut9{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e24,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut10{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e28,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut11{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e2c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut12{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e30,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut13{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e34,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut14{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e38,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut15{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e3c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut16{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e40,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut17{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e44,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut18{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e48,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut19{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e4c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut20{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e50,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut21{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e54,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut22{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e58,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut23{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e5c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut24{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e60,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut25{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e64,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut26{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e68,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut27{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e6c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut28{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e70,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut29{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e74,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut30{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e78,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut31{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e7c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut32{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e80,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut33{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e84,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut34{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e88,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut35{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e8c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut36{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e90,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut37{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e94,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut38{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e98,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut39{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030e9c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut40{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ea0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut41{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ea4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut42{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ea8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut43{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030eac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut44{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030eb0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut45{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030eb4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut46{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030eb8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut47{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ebc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut48{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ec0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut49{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ec4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut50{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ec8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut51{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ecc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut52{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ed0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut53{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ed4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut54{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ed8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut55{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030edc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut56{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ee0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut57{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ee4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut58{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ee8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut59{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030eec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut60{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ef0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut61{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ef4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut62{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ef8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut63{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030efc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut64{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f00,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut65{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f04,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut66{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f08,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut67{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f0c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut68{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f10,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut69{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f14,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut70{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f18,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut71{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f1c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut72{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f20,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut73{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f24,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut74{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f28,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut75{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f2c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut76{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f30,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut77{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f34,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut78{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f38,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut79{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f3c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut80{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f40,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut81{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f44,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut82{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f48,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut83{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f4c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut84{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f50,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut85{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f54,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut86{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f58,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut87{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f5c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut88{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f60,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut89{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f64,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut90{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f68,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut91{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f6c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut92{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f70,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut93{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f74,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut94{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f78,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut95{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f7c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut96{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f80,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut97{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f84,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut98{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f88,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut99{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f8c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut100{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f90,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut101{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f94,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut102{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f98,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut103{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030f9c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut104{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fa0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut105{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fa4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut106{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fa8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut107{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut108{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fb0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut109{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fb4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut110{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fb8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut111{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fbc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut112{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fc0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut113{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fc4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut114{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fc8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut115{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fcc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut116{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fd0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut117{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fd4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut118{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fd8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut119{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fdc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut120{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fe0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut121{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fe4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut122{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fe8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut123{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030fec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut124{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ff0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut125{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ff4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut126{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ff8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut127{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0030ffc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut128{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031000,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut129{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031004,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut130{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031008,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut131{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003100c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut132{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031010,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut133{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031014,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut134{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031018,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut135{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003101c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut136{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031020,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut137{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031024,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut138{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031028,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut139{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003102c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut140{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031030,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut141{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031034,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut142{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031038,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut143{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003103c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut144{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031040,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut145{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031044,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut146{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031048,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut147{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003104c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut148{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031050,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut149{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031054,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut150{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031058,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut151{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003105c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut152{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031060,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut153{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031064,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut154{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031068,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut155{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003106c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut156{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031070,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut157{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031074,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut158{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031078,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut159{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003107c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut160{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031080,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut161{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031084,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut162{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031088,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut163{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003108c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut164{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031090,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut165{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031094,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut166{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031098,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut167{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003109c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut168{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut169{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut170{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut171{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut172{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut173{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut174{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut175{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut176{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut177{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut178{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut179{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut180{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut181{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut182{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut183{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut184{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut185{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut186{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut187{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut188{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut189{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut190{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut191{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00310fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut192{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031100,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut193{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031104,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut194{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031108,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut195{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003110c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut196{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031110,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut197{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031114,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut198{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031118,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut199{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003111c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut200{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031120,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut201{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031124,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut202{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031128,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut203{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003112c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut204{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031130,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut205{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031134,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut206{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031138,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut207{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003113c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut208{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031140,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut209{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031144,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut210{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031148,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut211{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003114c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut212{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031150,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut213{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031154,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut214{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031158,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut215{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003115c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut216{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031160,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut217{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031164,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut218{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031168,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut219{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003116c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut220{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031170,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut221{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031174,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut222{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031178,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut223{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003117c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut224{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031180,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut225{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031184,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut226{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031188,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut227{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003118c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut228{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031190,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut229{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031194,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut230{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf0031198,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut231{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf003119c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut232{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut233{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut234{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut235{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut236{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut237{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut238{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut239{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut240{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut241{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut242{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut243{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut244{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut245{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut246{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut247{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut248{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut249{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut250{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut251{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut252{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut253{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut254{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcOvr2clut255{    ///<Overlay 2 CLUT Register
        using Addr = Register::Address<0xf00311fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut0{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031200,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut1{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031204,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut2{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031208,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut3{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003120c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut4{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031210,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut5{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031214,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut6{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031218,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut7{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003121c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut8{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031220,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut9{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031224,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut10{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031228,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut11{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003122c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut12{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031230,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut13{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031234,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut14{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031238,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut15{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003123c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut16{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031240,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut17{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031244,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut18{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031248,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut19{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003124c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut20{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031250,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut21{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031254,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut22{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031258,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut23{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003125c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut24{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031260,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut25{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031264,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut26{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031268,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut27{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003126c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut28{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031270,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut29{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031274,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut30{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031278,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut31{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003127c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut32{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031280,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut33{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031284,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut34{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031288,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut35{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003128c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut36{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031290,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut37{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031294,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut38{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031298,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut39{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003129c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut40{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut41{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut42{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut43{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut44{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut45{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut46{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut47{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut48{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut49{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut50{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut51{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut52{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut53{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut54{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut55{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut56{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut57{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut58{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut59{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut60{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut61{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut62{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut63{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00312fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut64{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031300,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut65{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031304,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut66{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031308,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut67{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003130c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut68{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031310,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut69{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031314,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut70{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031318,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut71{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003131c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut72{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031320,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut73{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031324,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut74{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031328,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut75{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003132c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut76{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031330,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut77{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031334,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut78{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031338,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut79{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003133c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut80{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031340,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut81{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031344,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut82{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031348,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut83{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003134c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut84{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031350,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut85{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031354,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut86{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031358,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut87{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003135c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut88{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031360,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut89{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031364,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut90{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031368,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut91{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003136c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut92{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031370,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut93{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031374,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut94{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031378,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut95{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003137c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut96{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031380,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut97{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031384,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut98{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031388,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut99{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003138c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut100{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031390,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut101{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031394,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut102{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031398,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut103{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003139c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut104{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut105{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut106{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut107{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut108{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut109{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut110{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut111{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut112{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut113{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut114{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut115{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut116{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut117{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut118{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut119{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut120{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut121{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut122{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut123{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut124{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut125{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut126{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut127{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00313fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut128{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031400,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut129{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031404,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut130{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031408,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut131{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003140c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut132{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031410,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut133{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031414,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut134{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031418,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut135{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003141c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut136{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031420,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut137{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031424,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut138{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031428,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut139{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003142c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut140{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031430,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut141{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031434,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut142{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031438,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut143{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003143c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut144{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031440,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut145{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031444,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut146{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031448,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut147{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003144c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut148{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031450,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut149{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031454,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut150{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031458,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut151{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003145c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut152{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031460,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut153{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031464,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut154{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031468,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut155{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003146c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut156{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031470,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut157{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031474,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut158{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031478,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut159{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003147c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut160{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031480,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut161{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031484,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut162{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031488,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut163{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003148c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut164{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031490,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut165{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031494,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut166{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031498,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut167{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003149c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut168{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut169{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut170{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut171{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut172{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut173{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut174{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut175{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut176{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut177{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut178{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut179{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut180{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut181{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut182{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut183{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut184{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut185{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut186{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut187{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut188{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut189{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut190{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut191{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00314fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut192{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031500,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut193{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031504,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut194{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031508,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut195{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003150c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut196{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031510,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut197{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031514,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut198{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031518,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut199{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003151c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut200{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031520,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut201{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031524,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut202{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031528,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut203{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003152c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut204{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031530,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut205{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031534,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut206{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031538,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut207{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003153c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut208{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031540,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut209{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031544,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut210{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031548,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut211{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003154c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut212{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031550,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut213{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031554,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut214{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031558,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut215{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003155c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut216{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031560,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut217{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031564,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut218{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031568,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut219{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003156c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut220{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031570,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut221{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031574,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut222{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031578,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut223{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003157c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut224{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031580,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut225{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031584,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut226{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031588,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut227{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003158c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut228{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031590,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut229{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031594,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut230{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf0031598,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut231{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf003159c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut232{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut233{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut234{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut235{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut236{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut237{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut238{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut239{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut240{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut241{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut242{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut243{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut244{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut245{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut246{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut247{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut248{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut249{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut250{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut251{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut252{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut253{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut254{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHeoclut255{    ///<High End Overlay CLUT Register
        using Addr = Register::Address<0xf00315fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut0{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031600,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut1{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031604,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut2{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031608,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut3{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003160c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut4{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031610,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut5{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031614,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut6{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031618,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut7{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003161c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut8{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031620,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut9{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031624,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut10{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031628,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut11{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003162c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut12{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031630,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut13{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031634,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut14{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031638,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut15{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003163c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut16{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031640,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut17{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031644,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut18{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031648,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut19{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003164c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut20{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031650,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut21{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031654,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut22{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031658,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut23{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003165c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut24{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031660,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut25{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031664,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut26{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031668,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut27{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003166c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut28{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031670,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut29{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031674,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut30{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031678,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut31{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003167c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut32{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031680,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut33{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031684,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut34{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031688,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut35{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003168c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut36{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031690,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut37{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031694,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut38{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031698,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut39{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003169c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut40{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut41{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut42{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut43{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut44{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut45{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut46{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut47{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut48{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut49{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut50{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut51{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut52{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut53{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut54{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut55{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut56{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut57{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut58{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut59{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut60{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut61{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut62{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut63{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00316fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut64{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031700,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut65{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031704,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut66{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031708,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut67{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003170c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut68{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031710,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut69{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031714,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut70{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031718,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut71{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003171c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut72{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031720,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut73{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031724,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut74{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031728,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut75{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003172c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut76{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031730,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut77{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031734,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut78{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031738,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut79{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003173c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut80{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031740,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut81{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031744,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut82{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031748,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut83{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003174c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut84{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031750,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut85{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031754,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut86{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031758,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut87{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003175c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut88{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031760,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut89{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031764,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut90{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031768,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut91{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003176c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut92{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031770,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut93{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031774,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut94{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031778,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut95{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003177c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut96{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031780,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut97{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031784,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut98{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031788,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut99{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003178c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut100{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031790,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut101{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031794,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut102{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031798,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut103{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003179c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut104{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut105{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut106{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut107{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut108{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut109{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut110{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut111{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut112{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut113{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut114{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut115{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut116{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut117{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut118{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut119{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut120{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut121{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut122{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut123{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut124{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut125{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut126{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut127{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00317fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut128{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031800,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut129{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031804,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut130{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031808,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut131{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003180c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut132{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031810,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut133{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031814,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut134{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031818,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut135{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003181c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut136{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031820,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut137{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031824,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut138{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031828,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut139{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003182c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut140{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031830,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut141{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031834,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut142{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031838,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut143{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003183c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut144{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031840,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut145{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031844,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut146{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031848,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut147{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003184c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut148{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031850,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut149{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031854,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut150{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031858,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut151{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003185c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut152{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031860,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut153{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031864,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut154{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031868,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut155{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003186c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut156{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031870,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut157{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031874,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut158{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031878,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut159{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003187c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut160{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031880,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut161{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031884,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut162{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031888,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut163{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003188c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut164{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031890,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut165{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031894,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut166{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031898,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut167{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003189c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut168{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut169{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut170{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut171{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut172{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut173{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut174{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut175{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut176{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut177{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut178{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut179{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut180{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut181{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut182{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut183{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut184{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut185{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut186{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut187{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut188{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut189{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut190{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut191{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00318fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut192{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031900,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut193{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031904,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut194{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031908,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut195{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003190c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut196{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031910,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut197{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031914,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut198{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031918,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut199{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003191c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut200{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031920,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut201{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031924,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut202{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031928,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut203{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003192c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut204{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031930,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut205{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031934,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut206{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031938,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut207{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003193c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut208{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031940,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut209{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031944,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut210{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031948,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut211{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003194c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut212{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031950,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut213{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031954,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut214{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031958,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut215{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003195c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut216{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031960,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut217{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031964,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut218{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031968,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut219{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003196c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut220{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031970,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut221{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031974,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut222{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031978,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut223{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003197c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut224{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031980,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut225{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031984,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut226{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031988,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut227{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003198c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut228{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031990,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut229{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031994,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut230{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf0031998,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut231{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf003199c,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut232{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319a0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut233{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319a4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut234{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319a8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut235{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319ac,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut236{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319b0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut237{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319b4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut238{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319b8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut239{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319bc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut240{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319c0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut241{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319c4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut242{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319c8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut243{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319cc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut244{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319d0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut245{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319d4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut246{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319d8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut247{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319dc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut248{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319e0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut249{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319e4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut250{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319e8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut251{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319ec,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut252{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319f0,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut253{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319f4,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut254{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319f8,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
    namespace LcdcHcrclut255{    ///<Hardware Cursor CLUT Register
        using Addr = Register::Address<0xf00319fc,0x00000000,0,unsigned>;
        ///Blue Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(7,0),Register::ReadWriteAccess,unsigned> bclut{}; 
        namespace BclutValC{
        }
        ///Green Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(15,8),Register::ReadWriteAccess,unsigned> gclut{}; 
        namespace GclutValC{
        }
        ///Red Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(23,16),Register::ReadWriteAccess,unsigned> rclut{}; 
        namespace RclutValC{
        }
        ///Alpha Color entry
        constexpr Register::FieldLocation<Addr,Register::maskFromRange(31,24),Register::ReadWriteAccess,unsigned> aclut{}; 
        namespace AclutValC{
        }
    }
}
